AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-1.lp solve solu /tmp/cbc1136744-2.sol (default strategy 1)
AccILPSolver: Continuous objective value is -58 - 0.02 seconds
AccILPSolver: Cgl0002I 91 variables fixed
AccILPSolver: Cgl0003I 33 fixed, 1025 tightened bounds, 274 strengthened rows, 21 substitutions
AccILPSolver: Cgl0003I 10 fixed, 659 tightened bounds, 136 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 5 fixed, 425 tightened bounds, 4 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 1 fixed, 288 tightened bounds, 27 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 87 tightened bounds, 1 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 10 tightened bounds, 70 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1104 rows, 621 columns (621 integer (181 of which binary)) and 2771 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 53 integer variables out of 621 objects (621 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 69 integers unsatisfied sum - 4.40934
AccILPSolver: Cbc0038I Pass   1: suminf.    1.52774 (40) obj. -57.8834 iterations 103
AccILPSolver: Cbc0038I Pass   2: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass   3: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass   4: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass   5: suminf.    0.96778 (16) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass   6: suminf.    0.91314 (2) obj. -52 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   8: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   9: suminf.    1.54283 (20) obj. -47 iterations 89
AccILPSolver: Cbc0038I Pass  10: suminf.    1.54161 (19) obj. -47 iterations 12
AccILPSolver: Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -47 iterations 16
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Rounding solution of -49 is better than previous of -47
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 275 integers at bound fixed and 0 continuous of which 27 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 609 rows 327 columns - 7 fixed gives 593, 317 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 571 rows 306 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -50.7999
AccILPSolver: Cbc0038I Pass  12: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  13: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass  14: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass  16: suminf.    1.00015 (23) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass  17: suminf.    0.91314 (2) obj. -52 iterations 9
AccILPSolver: Cbc0038I Pass  18: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  19: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  20: suminf.    9.03547 (81) obj. -50.7999 iterations 87
AccILPSolver: Cbc0038I Pass  21: suminf.    0.30967 (24) obj. -50.973 iterations 25
AccILPSolver: Cbc0038I Pass  22: suminf.    0.20009 (1) obj. -50.7999 iterations 27
AccILPSolver: Cbc0038I Solution found of -51
AccILPSolver: Cbc0038I Cleaned solution of -51
AccILPSolver: Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous of which 22 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 658 rows 347 columns - 18 fixed gives 587, 305 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 574 rows 300 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -53.1999
AccILPSolver: Cbc0038I Pass  23: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  24: suminf.    1.83154 (32) obj. -53.1999 iterations 41
AccILPSolver: Cbc0038I Pass  25: suminf.    1.83154 (32) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  26: suminf.    3.63188 (22) obj. -53.1999 iterations 32
AccILPSolver: Cbc0038I Pass  27: suminf.    3.92817 (45) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  28: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  29: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  30: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  31: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  32: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  33: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  34: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  35: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  36: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  37: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  38: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  39: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  40: suminf.    1.88409 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  41: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  42: suminf.    3.92817 (45) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass  43: suminf.    1.67224 (45) obj. -53.9434 iterations 11
AccILPSolver: Cbc0038I Pass  44: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  45: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  46: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  47: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  48: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  49: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  50: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  51: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  52: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  53: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  54: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  55: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  56: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  57: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  58: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  59: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  60: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  61: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  62: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  63: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  64: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  65: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  66: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  67: suminf.    3.92817 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  68: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  69: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  70: suminf.    3.71628 (45) obj. -53.1999 iterations 21
AccILPSolver: Cbc0038I Pass  71: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  72: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  73: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  74: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  75: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  76: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  77: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  78: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  79: suminf.    3.71628 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  80: suminf.    3.71628 (45) obj. -53.1999 iterations 7
AccILPSolver: Cbc0038I Pass  81: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  82: suminf.    3.71628 (45) obj. -53.1999 iterations 22
AccILPSolver: Cbc0038I Pass  83: suminf.    3.92817 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  84: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  85: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  86: suminf.    1.67224 (45) obj. -53.9434 iterations 7
AccILPSolver: Cbc0038I Pass  87: suminf.    3.71628 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  88: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  89: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  90: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  91: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  92: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  93: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  94: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  95: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  96: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  97: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  98: suminf.    3.71628 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  99: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass 100: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 101: suminf.    1.73210 (32) obj. -53.1999 iterations 52
AccILPSolver: Cbc0038I Pass 102: suminf.    1.73210 (32) obj. -53.1999 iterations 5
AccILPSolver: Cbc0038I Pass 103: suminf.    1.82216 (23) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 104: suminf.    1.82216 (23) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass 105: suminf.    3.62512 (16) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass 106: suminf.    1.79289 (16) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 107: suminf.    3.62512 (16) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 108: suminf.   19.48796 (109) obj. -53.1999 iterations 63
AccILPSolver: Cbc0038I Pass 109: suminf.   19.46331 (103) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 110: suminf.    3.59772 (21) obj. -53.1999 iterations 29
AccILPSolver: Cbc0038I Pass 111: suminf.    3.32914 (16) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass 112: suminf.    1.32449 (14) obj. -53.9657 iterations 10
AccILPSolver: Cbc0038I Pass 113: suminf.    3.31218 (14) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass 114: suminf.    7.23912 (48) obj. -53.1999 iterations 80
AccILPSolver: Cbc0038I Pass 115: suminf.    6.52497 (48) obj. -53.1999 iterations 25
AccILPSolver: Cbc0038I Pass 116: suminf.    0.97276 (11) obj. -54 iterations 15
AccILPSolver: Cbc0038I Pass 117: suminf.    0.91314 (2) obj. -54 iterations 9
AccILPSolver: Cbc0038I Pass 118: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 119: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 120: suminf.    8.34385 (71) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I Pass 121: suminf.    8.05897 (52) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass 122: suminf.    6.96921 (61) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 186 integers at bound fixed and 0 continuous of which 9 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 793 rows 421 columns - 27 fixed gives 689, 354 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 673 rows 345 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
AccILPSolver: Cbc0038I After 0.36 seconds - Feasibility pump exiting with objective of -51 - took 0.21 seconds
AccILPSolver: Cbc0012I Integer solution of -51 found by feasibility pump after 0 iterations and 0 nodes (0.36 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 580 rows 309 columns - 15 fixed gives 540, 283 - ok now
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 532 rows 278 columns
AccILPSolver: Cbc0031I 67 added rows had average density of 9.9701493
AccILPSolver: Cbc0013I At root node, 67 cuts changed objective from -58 to -58 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 114 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 293 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -51 best solution, best possible -58 (0.49 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 630 rows 332 columns - 14 fixed gives 549, 286 - ok now
AccILPSolver: Cbc0016I Integer solution of -57 found by strong branching after 1772 iterations and 72 nodes (0.85 seconds)
AccILPSolver: Cbc0012I Integer solution of -58 found by DiveCoefficient after 1931 iterations and 85 nodes (0.90 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -58, took 1931 iterations and 85 nodes (0.90 seconds)
AccILPSolver: Cbc0032I Strong branching done 1392 times (7498 iterations), fathomed 2 nodes and fixed 12 variables
AccILPSolver: Cbc0035I Maximum depth 40, 46 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -58 to -58
AccILPSolver: Probing was tried 10 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
AccILPSolver: Gomory was tried 10 times and created 328 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
AccILPSolver: Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 293 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -58.00000000
AccILPSolver: Enumerated nodes:               85
AccILPSolver: Total iterations:               1931
AccILPSolver: Time (CPU seconds):             0.92
AccILPSolver: Time (Wallclock seconds):       0.94
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       0.95   (Wallclock seconds):       0.97
AccILPSolver: 
benchmarking CPU/n=128, iter=4
AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-3.lp solve solu /tmp/cbc1136744-4.sol (default strategy 1)
AccILPSolver: Continuous objective value is -1 - 0.00 seconds
AccILPSolver: Cgl0002I 1 variables fixed
AccILPSolver: Cgl0004I processed model has 0 rows, 0 columns (0 integer (0 of which binary)) and 0 elements
AccILPSolver: Cbc3007W No integer variables - nothing to do
AccILPSolver: Cuts at root node changed objective from -1 to -1.79769e+308
AccILPSolver: Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -1.00000000
AccILPSolver: Enumerated nodes:               0
AccILPSolver: Total iterations:               0
AccILPSolver: Time (CPU seconds):             0.00
AccILPSolver: Time (Wallclock seconds):       0.00
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       0.00   (Wallclock seconds):       0.01
AccILPSolver: 
time                 338.3 ms   (-206.6 ms .. 726.4 ms)
                     0.718 R²   (0.221 R² .. 1.000 R²)
mean                 384.1 ms   (269.7 ms .. 445.8 ms)
std dev              119.3 ms   (99.06 ms .. 135.6 ms)
variance introduced by outliers: 73% (severely inflated)

AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-5.lp solve solu /tmp/cbc1136744-6.sol (default strategy 1)
AccILPSolver: Continuous objective value is -58 - 0.01 seconds
AccILPSolver: Cgl0002I 91 variables fixed
AccILPSolver: Cgl0003I 33 fixed, 1025 tightened bounds, 274 strengthened rows, 21 substitutions
AccILPSolver: Cgl0003I 10 fixed, 659 tightened bounds, 136 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 5 fixed, 425 tightened bounds, 4 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 1 fixed, 288 tightened bounds, 27 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 87 tightened bounds, 1 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 10 tightened bounds, 70 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1104 rows, 621 columns (621 integer (181 of which binary)) and 2771 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 53 integer variables out of 621 objects (621 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 69 integers unsatisfied sum - 4.40934
AccILPSolver: Cbc0038I Pass   1: suminf.    1.52774 (40) obj. -57.8834 iterations 103
AccILPSolver: Cbc0038I Pass   2: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass   3: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass   4: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass   5: suminf.    0.96778 (16) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass   6: suminf.    0.91314 (2) obj. -52 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   8: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   9: suminf.    1.54283 (20) obj. -47 iterations 89
AccILPSolver: Cbc0038I Pass  10: suminf.    1.54161 (19) obj. -47 iterations 12
AccILPSolver: Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -47 iterations 16
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Rounding solution of -49 is better than previous of -47
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 275 integers at bound fixed and 0 continuous of which 27 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 609 rows 327 columns - 7 fixed gives 593, 317 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 571 rows 306 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -50.7999
AccILPSolver: Cbc0038I Pass  12: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  13: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass  14: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass  16: suminf.    1.00015 (23) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass  17: suminf.    0.91314 (2) obj. -52 iterations 9
AccILPSolver: Cbc0038I Pass  18: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  19: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  20: suminf.    9.03547 (81) obj. -50.7999 iterations 87
AccILPSolver: Cbc0038I Pass  21: suminf.    0.30967 (24) obj. -50.973 iterations 25
AccILPSolver: Cbc0038I Pass  22: suminf.    0.20009 (1) obj. -50.7999 iterations 27
AccILPSolver: Cbc0038I Solution found of -51
AccILPSolver: Cbc0038I Cleaned solution of -51
AccILPSolver: Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous of which 22 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 658 rows 347 columns - 18 fixed gives 587, 305 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 574 rows 300 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -53.1999
AccILPSolver: Cbc0038I Pass  23: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  24: suminf.    1.83154 (32) obj. -53.1999 iterations 41
AccILPSolver: Cbc0038I Pass  25: suminf.    1.83154 (32) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  26: suminf.    3.63188 (22) obj. -53.1999 iterations 32
AccILPSolver: Cbc0038I Pass  27: suminf.    3.92817 (45) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  28: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  29: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  30: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  31: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  32: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  33: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  34: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  35: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  36: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  37: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  38: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  39: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  40: suminf.    1.88409 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  41: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  42: suminf.    3.92817 (45) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass  43: suminf.    1.67224 (45) obj. -53.9434 iterations 11
AccILPSolver: Cbc0038I Pass  44: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  45: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  46: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  47: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  48: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  49: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  50: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  51: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  52: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  53: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  54: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  55: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  56: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  57: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  58: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  59: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  60: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  61: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  62: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  63: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  64: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  65: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  66: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  67: suminf.    3.92817 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  68: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  69: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  70: suminf.    3.71628 (45) obj. -53.1999 iterations 21
AccILPSolver: Cbc0038I Pass  71: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  72: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  73: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  74: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  75: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  76: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  77: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  78: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  79: suminf.    3.71628 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  80: suminf.    3.71628 (45) obj. -53.1999 iterations 7
AccILPSolver: Cbc0038I Pass  81: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  82: suminf.    3.71628 (45) obj. -53.1999 iterations 22
AccILPSolver: Cbc0038I Pass  83: suminf.    3.92817 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  84: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  85: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  86: suminf.    1.67224 (45) obj. -53.9434 iterations 7
AccILPSolver: Cbc0038I Pass  87: suminf.    3.71628 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  88: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  89: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  90: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  91: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  92: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  93: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  94: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  95: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  96: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  97: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  98: suminf.    3.71628 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  99: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass 100: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 101: suminf.    1.73210 (32) obj. -53.1999 iterations 52
AccILPSolver: Cbc0038I Pass 102: suminf.    1.73210 (32) obj. -53.1999 iterations 5
AccILPSolver: Cbc0038I Pass 103: suminf.    1.82216 (23) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 104: suminf.    1.82216 (23) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass 105: suminf.    3.62512 (16) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass 106: suminf.    1.79289 (16) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 107: suminf.    3.62512 (16) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 108: suminf.   19.48796 (109) obj. -53.1999 iterations 63
AccILPSolver: Cbc0038I Pass 109: suminf.   19.46331 (103) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 110: suminf.    3.59772 (21) obj. -53.1999 iterations 29
AccILPSolver: Cbc0038I Pass 111: suminf.    3.32914 (16) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass 112: suminf.    1.32449 (14) obj. -53.9657 iterations 10
AccILPSolver: Cbc0038I Pass 113: suminf.    3.31218 (14) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass 114: suminf.    7.23912 (48) obj. -53.1999 iterations 80
AccILPSolver: Cbc0038I Pass 115: suminf.    6.52497 (48) obj. -53.1999 iterations 25
AccILPSolver: Cbc0038I Pass 116: suminf.    0.97276 (11) obj. -54 iterations 15
AccILPSolver: Cbc0038I Pass 117: suminf.    0.91314 (2) obj. -54 iterations 9
AccILPSolver: Cbc0038I Pass 118: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 119: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 120: suminf.    8.34385 (71) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I Pass 121: suminf.    8.05897 (52) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass 122: suminf.    6.96921 (61) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 186 integers at bound fixed and 0 continuous of which 9 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 793 rows 421 columns - 27 fixed gives 689, 354 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 673 rows 345 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.35 seconds)
AccILPSolver: Cbc0038I After 0.35 seconds - Feasibility pump exiting with objective of -51 - took 0.21 seconds
AccILPSolver: Cbc0012I Integer solution of -51 found by feasibility pump after 0 iterations and 0 nodes (0.35 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 580 rows 309 columns - 15 fixed gives 540, 283 - ok now
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 532 rows 278 columns
AccILPSolver: Cbc0031I 67 added rows had average density of 9.9701493
AccILPSolver: Cbc0013I At root node, 67 cuts changed objective from -58 to -58 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 114 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 293 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -51 best solution, best possible -58 (0.49 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 630 rows 332 columns - 14 fixed gives 549, 286 - ok now
AccILPSolver: Cbc0016I Integer solution of -57 found by strong branching after 1772 iterations and 72 nodes (0.85 seconds)
AccILPSolver: Cbc0012I Integer solution of -58 found by DiveCoefficient after 1931 iterations and 85 nodes (0.90 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -58, took 1931 iterations and 85 nodes (0.90 seconds)
AccILPSolver: Cbc0032I Strong branching done 1392 times (7498 iterations), fathomed 2 nodes and fixed 12 variables
AccILPSolver: Cbc0035I Maximum depth 40, 46 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -58 to -58
AccILPSolver: Probing was tried 10 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
AccILPSolver: Gomory was tried 10 times and created 328 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
AccILPSolver: Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 293 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -58.00000000
AccILPSolver: Enumerated nodes:               85
AccILPSolver: Total iterations:               1931
AccILPSolver: Time (CPU seconds):             0.92
AccILPSolver: Time (Wallclock seconds):       0.93
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       0.94   (Wallclock seconds):       0.96
AccILPSolver: 
benchmarking CPU/n=128, iter=8
time                 632.7 ms   (434.3 ms .. 790.9 ms)
                     0.989 R²   (0.959 R² .. 1.000 R²)
mean                 635.5 ms   (603.2 ms .. 681.2 ms)
std dev              43.45 ms   (18.47 ms .. 55.54 ms)
variance introduced by outliers: 20% (moderately inflated)

AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-7.lp solve solu /tmp/cbc1136744-8.sol (default strategy 1)
AccILPSolver: Continuous objective value is -58 - 0.01 seconds
AccILPSolver: Cgl0002I 91 variables fixed
AccILPSolver: Cgl0003I 33 fixed, 1025 tightened bounds, 274 strengthened rows, 21 substitutions
AccILPSolver: Cgl0003I 10 fixed, 659 tightened bounds, 136 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 5 fixed, 425 tightened bounds, 4 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 1 fixed, 288 tightened bounds, 27 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 87 tightened bounds, 1 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 10 tightened bounds, 70 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1104 rows, 621 columns (621 integer (181 of which binary)) and 2771 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 53 integer variables out of 621 objects (621 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 69 integers unsatisfied sum - 4.40934
AccILPSolver: Cbc0038I Pass   1: suminf.    1.52774 (40) obj. -57.8834 iterations 103
AccILPSolver: Cbc0038I Pass   2: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass   3: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass   4: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass   5: suminf.    0.96778 (16) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass   6: suminf.    0.91314 (2) obj. -52 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   8: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   9: suminf.    1.54283 (20) obj. -47 iterations 89
AccILPSolver: Cbc0038I Pass  10: suminf.    1.54161 (19) obj. -47 iterations 12
AccILPSolver: Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -47 iterations 16
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Rounding solution of -49 is better than previous of -47
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 275 integers at bound fixed and 0 continuous of which 27 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 609 rows 327 columns - 7 fixed gives 593, 317 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 571 rows 306 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -50.7999
AccILPSolver: Cbc0038I Pass  12: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  13: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass  14: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass  16: suminf.    1.00015 (23) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass  17: suminf.    0.91314 (2) obj. -52 iterations 9
AccILPSolver: Cbc0038I Pass  18: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  19: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  20: suminf.    9.03547 (81) obj. -50.7999 iterations 87
AccILPSolver: Cbc0038I Pass  21: suminf.    0.30967 (24) obj. -50.973 iterations 25
AccILPSolver: Cbc0038I Pass  22: suminf.    0.20009 (1) obj. -50.7999 iterations 27
AccILPSolver: Cbc0038I Solution found of -51
AccILPSolver: Cbc0038I Cleaned solution of -51
AccILPSolver: Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous of which 22 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 658 rows 347 columns - 18 fixed gives 587, 305 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 574 rows 300 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -53.1999
AccILPSolver: Cbc0038I Pass  23: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  24: suminf.    1.83154 (32) obj. -53.1999 iterations 41
AccILPSolver: Cbc0038I Pass  25: suminf.    1.83154 (32) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  26: suminf.    3.63188 (22) obj. -53.1999 iterations 32
AccILPSolver: Cbc0038I Pass  27: suminf.    3.92817 (45) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  28: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  29: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  30: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  31: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  32: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  33: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  34: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  35: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  36: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  37: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  38: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  39: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  40: suminf.    1.88409 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  41: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  42: suminf.    3.92817 (45) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass  43: suminf.    1.67224 (45) obj. -53.9434 iterations 11
AccILPSolver: Cbc0038I Pass  44: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  45: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  46: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  47: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  48: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  49: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  50: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  51: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  52: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  53: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  54: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  55: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  56: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  57: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  58: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  59: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  60: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  61: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  62: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  63: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  64: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  65: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  66: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  67: suminf.    3.92817 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  68: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  69: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  70: suminf.    3.71628 (45) obj. -53.1999 iterations 21
AccILPSolver: Cbc0038I Pass  71: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  72: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  73: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  74: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  75: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  76: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  77: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  78: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  79: suminf.    3.71628 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  80: suminf.    3.71628 (45) obj. -53.1999 iterations 7
AccILPSolver: Cbc0038I Pass  81: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  82: suminf.    3.71628 (45) obj. -53.1999 iterations 22
AccILPSolver: Cbc0038I Pass  83: suminf.    3.92817 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  84: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  85: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  86: suminf.    1.67224 (45) obj. -53.9434 iterations 7
AccILPSolver: Cbc0038I Pass  87: suminf.    3.71628 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  88: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  89: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  90: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  91: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  92: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  93: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  94: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  95: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  96: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  97: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  98: suminf.    3.71628 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  99: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass 100: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 101: suminf.    1.73210 (32) obj. -53.1999 iterations 52
AccILPSolver: Cbc0038I Pass 102: suminf.    1.73210 (32) obj. -53.1999 iterations 5
AccILPSolver: Cbc0038I Pass 103: suminf.    1.82216 (23) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 104: suminf.    1.82216 (23) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass 105: suminf.    3.62512 (16) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass 106: suminf.    1.79289 (16) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 107: suminf.    3.62512 (16) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 108: suminf.   19.48796 (109) obj. -53.1999 iterations 63
AccILPSolver: Cbc0038I Pass 109: suminf.   19.46331 (103) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 110: suminf.    3.59772 (21) obj. -53.1999 iterations 29
AccILPSolver: Cbc0038I Pass 111: suminf.    3.32914 (16) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass 112: suminf.    1.32449 (14) obj. -53.9657 iterations 10
AccILPSolver: Cbc0038I Pass 113: suminf.    3.31218 (14) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass 114: suminf.    7.23912 (48) obj. -53.1999 iterations 80
AccILPSolver: Cbc0038I Pass 115: suminf.    6.52497 (48) obj. -53.1999 iterations 25
AccILPSolver: Cbc0038I Pass 116: suminf.    0.97276 (11) obj. -54 iterations 15
AccILPSolver: Cbc0038I Pass 117: suminf.    0.91314 (2) obj. -54 iterations 9
AccILPSolver: Cbc0038I Pass 118: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 119: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 120: suminf.    8.34385 (71) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I Pass 121: suminf.    8.05897 (52) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass 122: suminf.    6.96921 (61) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 186 integers at bound fixed and 0 continuous of which 9 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 793 rows 421 columns - 27 fixed gives 689, 354 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 673 rows 345 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.35 seconds)
AccILPSolver: Cbc0038I After 0.35 seconds - Feasibility pump exiting with objective of -51 - took 0.21 seconds
AccILPSolver: Cbc0012I Integer solution of -51 found by feasibility pump after 0 iterations and 0 nodes (0.35 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 580 rows 309 columns - 15 fixed gives 540, 283 - ok now
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 532 rows 278 columns
AccILPSolver: Cbc0031I 67 added rows had average density of 9.9701493
AccILPSolver: Cbc0013I At root node, 67 cuts changed objective from -58 to -58 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 114 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 293 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -51 best solution, best possible -58 (0.49 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 630 rows 332 columns - 14 fixed gives 549, 286 - ok now
AccILPSolver: Cbc0016I Integer solution of -57 found by strong branching after 1772 iterations and 72 nodes (0.85 seconds)
AccILPSolver: Cbc0012I Integer solution of -58 found by DiveCoefficient after 1931 iterations and 85 nodes (0.90 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -58, took 1931 iterations and 85 nodes (0.90 seconds)
AccILPSolver: Cbc0032I Strong branching done 1392 times (7498 iterations), fathomed 2 nodes and fixed 12 variables
AccILPSolver: Cbc0035I Maximum depth 40, 46 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -58 to -58
AccILPSolver: Probing was tried 10 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: Gomory was tried 10 times and created 328 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
AccILPSolver: Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 293 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -58.00000000
AccILPSolver: Enumerated nodes:               85
AccILPSolver: Total iterations:               1931
AccILPSolver: Time (CPU seconds):             0.92
AccILPSolver: Time (Wallclock seconds):       0.96
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       0.95   (Wallclock seconds):       0.98
AccILPSolver: 
benchmarking CPU/n=128, iter=16
time                 1.200 s    (1.109 s .. 1.295 s)
                     0.999 R²   (0.997 R² .. 1.000 R²)
mean                 1.218 s    (1.194 s .. 1.250 s)
std dev              31.64 ms   (13.10 ms .. 43.52 ms)
variance introduced by outliers: 19% (moderately inflated)

AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-9.lp solve solu /tmp/cbc1136744-10.sol (default strategy 1)
AccILPSolver: Continuous objective value is -58 - 0.02 seconds
AccILPSolver: Cgl0002I 91 variables fixed
AccILPSolver: Cgl0003I 33 fixed, 1025 tightened bounds, 274 strengthened rows, 21 substitutions
AccILPSolver: Cgl0003I 10 fixed, 659 tightened bounds, 136 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 5 fixed, 425 tightened bounds, 4 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 1 fixed, 288 tightened bounds, 27 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 87 tightened bounds, 1 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 10 tightened bounds, 70 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1104 rows, 621 columns (621 integer (181 of which binary)) and 2771 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 53 integer variables out of 621 objects (621 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 69 integers unsatisfied sum - 4.40934
AccILPSolver: Cbc0038I Pass   1: suminf.    1.52774 (40) obj. -57.8834 iterations 103
AccILPSolver: Cbc0038I Pass   2: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass   3: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass   4: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass   5: suminf.    0.96778 (16) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass   6: suminf.    0.91314 (2) obj. -52 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   8: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   9: suminf.    1.54283 (20) obj. -47 iterations 89
AccILPSolver: Cbc0038I Pass  10: suminf.    1.54161 (19) obj. -47 iterations 12
AccILPSolver: Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -47 iterations 16
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Rounding solution of -49 is better than previous of -47
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 275 integers at bound fixed and 0 continuous of which 27 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 609 rows 327 columns - 7 fixed gives 593, 317 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 571 rows 306 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -50.7999
AccILPSolver: Cbc0038I Pass  12: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  13: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass  14: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass  16: suminf.    1.00015 (23) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass  17: suminf.    0.91314 (2) obj. -52 iterations 9
AccILPSolver: Cbc0038I Pass  18: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  19: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  20: suminf.    9.03547 (81) obj. -50.7999 iterations 87
AccILPSolver: Cbc0038I Pass  21: suminf.    0.30967 (24) obj. -50.973 iterations 25
AccILPSolver: Cbc0038I Pass  22: suminf.    0.20009 (1) obj. -50.7999 iterations 27
AccILPSolver: Cbc0038I Solution found of -51
AccILPSolver: Cbc0038I Cleaned solution of -51
AccILPSolver: Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous of which 22 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 658 rows 347 columns - 18 fixed gives 587, 305 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 574 rows 300 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -53.1999
AccILPSolver: Cbc0038I Pass  23: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  24: suminf.    1.83154 (32) obj. -53.1999 iterations 41
AccILPSolver: Cbc0038I Pass  25: suminf.    1.83154 (32) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  26: suminf.    3.63188 (22) obj. -53.1999 iterations 32
AccILPSolver: Cbc0038I Pass  27: suminf.    3.92817 (45) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  28: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  29: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  30: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  31: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  32: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  33: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  34: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  35: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  36: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  37: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  38: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  39: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  40: suminf.    1.88409 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  41: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  42: suminf.    3.92817 (45) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass  43: suminf.    1.67224 (45) obj. -53.9434 iterations 11
AccILPSolver: Cbc0038I Pass  44: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  45: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  46: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  47: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  48: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  49: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  50: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  51: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  52: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  53: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  54: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  55: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  56: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  57: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  58: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  59: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  60: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  61: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  62: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  63: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  64: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  65: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  66: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  67: suminf.    3.92817 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  68: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  69: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  70: suminf.    3.71628 (45) obj. -53.1999 iterations 21
AccILPSolver: Cbc0038I Pass  71: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  72: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  73: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  74: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  75: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  76: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  77: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  78: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  79: suminf.    3.71628 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  80: suminf.    3.71628 (45) obj. -53.1999 iterations 7
AccILPSolver: Cbc0038I Pass  81: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  82: suminf.    3.71628 (45) obj. -53.1999 iterations 22
AccILPSolver: Cbc0038I Pass  83: suminf.    3.92817 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  84: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  85: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  86: suminf.    1.67224 (45) obj. -53.9434 iterations 7
AccILPSolver: Cbc0038I Pass  87: suminf.    3.71628 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  88: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  89: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  90: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  91: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  92: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  93: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  94: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  95: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  96: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  97: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  98: suminf.    3.71628 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  99: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass 100: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 101: suminf.    1.73210 (32) obj. -53.1999 iterations 52
AccILPSolver: Cbc0038I Pass 102: suminf.    1.73210 (32) obj. -53.1999 iterations 5
AccILPSolver: Cbc0038I Pass 103: suminf.    1.82216 (23) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 104: suminf.    1.82216 (23) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass 105: suminf.    3.62512 (16) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass 106: suminf.    1.79289 (16) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 107: suminf.    3.62512 (16) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 108: suminf.   19.48796 (109) obj. -53.1999 iterations 63
AccILPSolver: Cbc0038I Pass 109: suminf.   19.46331 (103) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 110: suminf.    3.59772 (21) obj. -53.1999 iterations 29
AccILPSolver: Cbc0038I Pass 111: suminf.    3.32914 (16) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass 112: suminf.    1.32449 (14) obj. -53.9657 iterations 10
AccILPSolver: Cbc0038I Pass 113: suminf.    3.31218 (14) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass 114: suminf.    7.23912 (48) obj. -53.1999 iterations 80
AccILPSolver: Cbc0038I Pass 115: suminf.    6.52497 (48) obj. -53.1999 iterations 25
AccILPSolver: Cbc0038I Pass 116: suminf.    0.97276 (11) obj. -54 iterations 15
AccILPSolver: Cbc0038I Pass 117: suminf.    0.91314 (2) obj. -54 iterations 9
AccILPSolver: Cbc0038I Pass 118: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 119: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 120: suminf.    8.34385 (71) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I Pass 121: suminf.    8.05897 (52) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass 122: suminf.    6.96921 (61) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 186 integers at bound fixed and 0 continuous of which 9 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 793 rows 421 columns - 27 fixed gives 689, 354 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 673 rows 345 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.35 seconds)
AccILPSolver: Cbc0038I After 0.35 seconds - Feasibility pump exiting with objective of -51 - took 0.20 seconds
AccILPSolver: Cbc0012I Integer solution of -51 found by feasibility pump after 0 iterations and 0 nodes (0.35 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 580 rows 309 columns - 15 fixed gives 540, 283 - ok now
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 532 rows 278 columns
AccILPSolver: Cbc0031I 67 added rows had average density of 9.9701493
AccILPSolver: Cbc0013I At root node, 67 cuts changed objective from -58 to -58 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 114 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 293 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -51 best solution, best possible -58 (0.48 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 630 rows 332 columns - 14 fixed gives 549, 286 - ok now
AccILPSolver: Cbc0016I Integer solution of -57 found by strong branching after 1772 iterations and 72 nodes (0.85 seconds)
AccILPSolver: Cbc0012I Integer solution of -58 found by DiveCoefficient after 1931 iterations and 85 nodes (0.90 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -58, took 1931 iterations and 85 nodes (0.90 seconds)
AccILPSolver: Cbc0032I Strong branching done 1392 times (7498 iterations), fathomed 2 nodes and fixed 12 variables
AccILPSolver: Cbc0035I Maximum depth 40, 46 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -58 to -58
AccILPSolver: Probing was tried 10 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: Gomory was tried 10 times and created 328 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
AccILPSolver: Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 293 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -58.00000000
AccILPSolver: Enumerated nodes:               85
AccILPSolver: Total iterations:               1931
AccILPSolver: Time (CPU seconds):             0.92
AccILPSolver: Time (Wallclock seconds):       0.95
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       0.94   (Wallclock seconds):       0.98
AccILPSolver: 
benchmarking CPU/n=128, iter=32
time                 2.476 s    (2.387 s .. 2.581 s)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 2.418 s    (2.398 s .. 2.448 s)
std dev              28.49 ms   (4.182 ms .. 36.80 ms)
variance introduced by outliers: 19% (moderately inflated)

AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-11.lp solve solu /tmp/cbc1136744-12.sol (default strategy 1)
AccILPSolver: Continuous objective value is -58 - 0.01 seconds
AccILPSolver: Cgl0002I 91 variables fixed
AccILPSolver: Cgl0003I 33 fixed, 1025 tightened bounds, 274 strengthened rows, 21 substitutions
AccILPSolver: Cgl0003I 10 fixed, 659 tightened bounds, 136 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 5 fixed, 425 tightened bounds, 4 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 1 fixed, 288 tightened bounds, 27 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 87 tightened bounds, 1 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 10 tightened bounds, 70 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1104 rows, 621 columns (621 integer (181 of which binary)) and 2771 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 53 integer variables out of 621 objects (621 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 69 integers unsatisfied sum - 4.40934
AccILPSolver: Cbc0038I Pass   1: suminf.    1.52774 (40) obj. -57.8834 iterations 103
AccILPSolver: Cbc0038I Pass   2: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass   3: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass   4: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass   5: suminf.    0.96778 (16) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass   6: suminf.    0.91314 (2) obj. -52 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   8: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   9: suminf.    1.54283 (20) obj. -47 iterations 89
AccILPSolver: Cbc0038I Pass  10: suminf.    1.54161 (19) obj. -47 iterations 12
AccILPSolver: Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -47 iterations 16
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Rounding solution of -49 is better than previous of -47
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 275 integers at bound fixed and 0 continuous of which 27 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 609 rows 327 columns - 7 fixed gives 593, 317 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 571 rows 306 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -50.7999
AccILPSolver: Cbc0038I Pass  12: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  13: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass  14: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass  16: suminf.    1.00015 (23) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass  17: suminf.    0.91314 (2) obj. -52 iterations 9
AccILPSolver: Cbc0038I Pass  18: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  19: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  20: suminf.    9.03547 (81) obj. -50.7999 iterations 87
AccILPSolver: Cbc0038I Pass  21: suminf.    0.30967 (24) obj. -50.973 iterations 25
AccILPSolver: Cbc0038I Pass  22: suminf.    0.20009 (1) obj. -50.7999 iterations 27
AccILPSolver: Cbc0038I Solution found of -51
AccILPSolver: Cbc0038I Cleaned solution of -51
AccILPSolver: Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous of which 22 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 658 rows 347 columns - 18 fixed gives 587, 305 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 574 rows 300 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -53.1999
AccILPSolver: Cbc0038I Pass  23: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  24: suminf.    1.83154 (32) obj. -53.1999 iterations 41
AccILPSolver: Cbc0038I Pass  25: suminf.    1.83154 (32) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  26: suminf.    3.63188 (22) obj. -53.1999 iterations 32
AccILPSolver: Cbc0038I Pass  27: suminf.    3.92817 (45) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  28: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  29: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  30: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  31: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  32: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  33: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  34: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  35: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  36: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  37: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  38: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  39: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  40: suminf.    1.88409 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  41: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  42: suminf.    3.92817 (45) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass  43: suminf.    1.67224 (45) obj. -53.9434 iterations 11
AccILPSolver: Cbc0038I Pass  44: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  45: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  46: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  47: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  48: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  49: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  50: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  51: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  52: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  53: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  54: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  55: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  56: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  57: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  58: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  59: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  60: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  61: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  62: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  63: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  64: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  65: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  66: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  67: suminf.    3.92817 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  68: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  69: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  70: suminf.    3.71628 (45) obj. -53.1999 iterations 21
AccILPSolver: Cbc0038I Pass  71: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  72: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  73: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  74: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  75: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  76: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  77: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  78: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  79: suminf.    3.71628 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  80: suminf.    3.71628 (45) obj. -53.1999 iterations 7
AccILPSolver: Cbc0038I Pass  81: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  82: suminf.    3.71628 (45) obj. -53.1999 iterations 22
AccILPSolver: Cbc0038I Pass  83: suminf.    3.92817 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  84: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  85: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  86: suminf.    1.67224 (45) obj. -53.9434 iterations 7
AccILPSolver: Cbc0038I Pass  87: suminf.    3.71628 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  88: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  89: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  90: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  91: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  92: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  93: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  94: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  95: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  96: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  97: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  98: suminf.    3.71628 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  99: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass 100: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 101: suminf.    1.73210 (32) obj. -53.1999 iterations 52
AccILPSolver: Cbc0038I Pass 102: suminf.    1.73210 (32) obj. -53.1999 iterations 5
AccILPSolver: Cbc0038I Pass 103: suminf.    1.82216 (23) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 104: suminf.    1.82216 (23) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass 105: suminf.    3.62512 (16) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass 106: suminf.    1.79289 (16) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 107: suminf.    3.62512 (16) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 108: suminf.   19.48796 (109) obj. -53.1999 iterations 63
AccILPSolver: Cbc0038I Pass 109: suminf.   19.46331 (103) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 110: suminf.    3.59772 (21) obj. -53.1999 iterations 29
AccILPSolver: Cbc0038I Pass 111: suminf.    3.32914 (16) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass 112: suminf.    1.32449 (14) obj. -53.9657 iterations 10
AccILPSolver: Cbc0038I Pass 113: suminf.    3.31218 (14) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass 114: suminf.    7.23912 (48) obj. -53.1999 iterations 80
AccILPSolver: Cbc0038I Pass 115: suminf.    6.52497 (48) obj. -53.1999 iterations 25
AccILPSolver: Cbc0038I Pass 116: suminf.    0.97276 (11) obj. -54 iterations 15
AccILPSolver: Cbc0038I Pass 117: suminf.    0.91314 (2) obj. -54 iterations 9
AccILPSolver: Cbc0038I Pass 118: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 119: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 120: suminf.    8.34385 (71) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I Pass 121: suminf.    8.05897 (52) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass 122: suminf.    6.96921 (61) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 186 integers at bound fixed and 0 continuous of which 9 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 793 rows 421 columns - 27 fixed gives 689, 354 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 673 rows 345 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
AccILPSolver: Cbc0038I After 0.36 seconds - Feasibility pump exiting with objective of -51 - took 0.21 seconds
AccILPSolver: Cbc0012I Integer solution of -51 found by feasibility pump after 0 iterations and 0 nodes (0.36 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 580 rows 309 columns - 15 fixed gives 540, 283 - ok now
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 532 rows 278 columns
AccILPSolver: Cbc0031I 67 added rows had average density of 9.9701493
AccILPSolver: Cbc0013I At root node, 67 cuts changed objective from -58 to -58 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 114 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 293 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -51 best solution, best possible -58 (0.49 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 630 rows 332 columns - 14 fixed gives 549, 286 - ok now
AccILPSolver: Cbc0016I Integer solution of -57 found by strong branching after 1772 iterations and 72 nodes (0.86 seconds)
AccILPSolver: Cbc0012I Integer solution of -58 found by DiveCoefficient after 1931 iterations and 85 nodes (0.91 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -58, took 1931 iterations and 85 nodes (0.91 seconds)
AccILPSolver: Cbc0032I Strong branching done 1392 times (7498 iterations), fathomed 2 nodes and fixed 12 variables
AccILPSolver: Cbc0035I Maximum depth 40, 46 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -58 to -58
AccILPSolver: Probing was tried 10 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
AccILPSolver: Gomory was tried 10 times and created 328 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
AccILPSolver: Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 293 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -58.00000000
AccILPSolver: Enumerated nodes:               85
AccILPSolver: Total iterations:               1931
AccILPSolver: Time (CPU seconds):             0.93
AccILPSolver: Time (Wallclock seconds):       0.95
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       0.96   (Wallclock seconds):       0.97
AccILPSolver: 
benchmarking CPU/n=128, iter=64
time                 4.736 s    (4.510 s .. NaN s)
                     1.000 R²   (0.999 R² .. 1.000 R²)
mean                 4.785 s    (4.747 s .. 4.815 s)
std dev              37.31 ms   (19.02 ms .. 44.59 ms)
variance introduced by outliers: 19% (moderately inflated)

AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-13.lp solve solu /tmp/cbc1136744-14.sol (default strategy 1)
AccILPSolver: Continuous objective value is -58 - 0.01 seconds
AccILPSolver: Cgl0002I 91 variables fixed
AccILPSolver: Cgl0003I 33 fixed, 1025 tightened bounds, 274 strengthened rows, 21 substitutions
AccILPSolver: Cgl0003I 10 fixed, 659 tightened bounds, 136 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 5 fixed, 425 tightened bounds, 4 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 1 fixed, 288 tightened bounds, 27 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 87 tightened bounds, 1 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 10 tightened bounds, 70 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1104 rows, 621 columns (621 integer (181 of which binary)) and 2771 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 53 integer variables out of 621 objects (621 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 69 integers unsatisfied sum - 4.40934
AccILPSolver: Cbc0038I Pass   1: suminf.    1.52774 (40) obj. -57.8834 iterations 103
AccILPSolver: Cbc0038I Pass   2: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass   3: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass   4: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass   5: suminf.    0.96778 (16) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass   6: suminf.    0.91314 (2) obj. -52 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   8: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass   9: suminf.    1.54283 (20) obj. -47 iterations 89
AccILPSolver: Cbc0038I Pass  10: suminf.    1.54161 (19) obj. -47 iterations 12
AccILPSolver: Cbc0038I Pass  11: suminf.    0.00000 (0) obj. -47 iterations 16
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Rounding solution of -49 is better than previous of -47
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 275 integers at bound fixed and 0 continuous of which 27 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 609 rows 327 columns - 7 fixed gives 593, 317 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 571 rows 306 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -50.7999
AccILPSolver: Cbc0038I Pass  12: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  13: suminf.    0.95180 (18) obj. -52 iterations 40
AccILPSolver: Cbc0038I Pass  14: suminf.    0.95180 (18) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.91990 (8) obj. -52 iterations 15
AccILPSolver: Cbc0038I Pass  16: suminf.    1.00015 (23) obj. -52 iterations 8
AccILPSolver: Cbc0038I Pass  17: suminf.    0.91314 (2) obj. -52 iterations 9
AccILPSolver: Cbc0038I Pass  18: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  19: suminf.    0.91314 (2) obj. -52 iterations 1
AccILPSolver: Cbc0038I Pass  20: suminf.    9.03547 (81) obj. -50.7999 iterations 87
AccILPSolver: Cbc0038I Pass  21: suminf.    0.30967 (24) obj. -50.973 iterations 25
AccILPSolver: Cbc0038I Pass  22: suminf.    0.20009 (1) obj. -50.7999 iterations 27
AccILPSolver: Cbc0038I Solution found of -51
AccILPSolver: Cbc0038I Cleaned solution of -51
AccILPSolver: Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous of which 22 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 658 rows 347 columns - 18 fixed gives 587, 305 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 574 rows 300 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -53.1999
AccILPSolver: Cbc0038I Pass  23: suminf.    1.52774 (40) obj. -57.8834 iterations 0
AccILPSolver: Cbc0038I Pass  24: suminf.    1.83154 (32) obj. -53.1999 iterations 41
AccILPSolver: Cbc0038I Pass  25: suminf.    1.83154 (32) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  26: suminf.    3.63188 (22) obj. -53.1999 iterations 32
AccILPSolver: Cbc0038I Pass  27: suminf.    3.92817 (45) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass  28: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  29: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  30: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  31: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  32: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  33: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  34: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  35: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  36: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  37: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  38: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  39: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  40: suminf.    1.88409 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  41: suminf.    3.92817 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  42: suminf.    3.92817 (45) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass  43: suminf.    1.67224 (45) obj. -53.9434 iterations 11
AccILPSolver: Cbc0038I Pass  44: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  45: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  46: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  47: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  48: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  49: suminf.    3.92817 (45) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass  50: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  51: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  52: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  53: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  54: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  55: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  56: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  57: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  58: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  59: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  60: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  61: suminf.    3.71628 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  62: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  63: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  64: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  65: suminf.    3.92817 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  66: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  67: suminf.    3.92817 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  68: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  69: suminf.    3.92817 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  70: suminf.    3.71628 (45) obj. -53.1999 iterations 21
AccILPSolver: Cbc0038I Pass  71: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  72: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  73: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  74: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  75: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  76: suminf.    3.71628 (45) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass  77: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  78: suminf.    1.67224 (45) obj. -53.9434 iterations 9
AccILPSolver: Cbc0038I Pass  79: suminf.    3.71628 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  80: suminf.    3.71628 (45) obj. -53.1999 iterations 7
AccILPSolver: Cbc0038I Pass  81: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  82: suminf.    3.71628 (45) obj. -53.1999 iterations 22
AccILPSolver: Cbc0038I Pass  83: suminf.    3.92817 (45) obj. -53.1999 iterations 20
AccILPSolver: Cbc0038I Pass  84: suminf.    3.71628 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  85: suminf.    1.67224 (45) obj. -53.9434 iterations 13
AccILPSolver: Cbc0038I Pass  86: suminf.    1.67224 (45) obj. -53.9434 iterations 7
AccILPSolver: Cbc0038I Pass  87: suminf.    3.71628 (45) obj. -53.1999 iterations 13
AccILPSolver: Cbc0038I Pass  88: suminf.    3.71628 (45) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass  89: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  90: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  91: suminf.    3.92817 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  92: suminf.    3.71628 (45) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass  93: suminf.    3.92817 (45) obj. -53.1999 iterations 14
AccILPSolver: Cbc0038I Pass  94: suminf.    3.71628 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass  95: suminf.    3.92817 (45) obj. -53.1999 iterations 18
AccILPSolver: Cbc0038I Pass  96: suminf.    1.67224 (45) obj. -53.9434 iterations 10
AccILPSolver: Cbc0038I Pass  97: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass  98: suminf.    3.71628 (45) obj. -53.1999 iterations 12
AccILPSolver: Cbc0038I Pass  99: suminf.    3.92817 (45) obj. -53.1999 iterations 17
AccILPSolver: Cbc0038I Pass 100: suminf.    3.71628 (45) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 101: suminf.    1.73210 (32) obj. -53.1999 iterations 52
AccILPSolver: Cbc0038I Pass 102: suminf.    1.73210 (32) obj. -53.1999 iterations 5
AccILPSolver: Cbc0038I Pass 103: suminf.    1.82216 (23) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 104: suminf.    1.82216 (23) obj. -53.1999 iterations 9
AccILPSolver: Cbc0038I Pass 105: suminf.    3.62512 (16) obj. -53.1999 iterations 19
AccILPSolver: Cbc0038I Pass 106: suminf.    1.79289 (16) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 107: suminf.    3.62512 (16) obj. -53.1999 iterations 15
AccILPSolver: Cbc0038I Pass 108: suminf.   19.48796 (109) obj. -53.1999 iterations 63
AccILPSolver: Cbc0038I Pass 109: suminf.   19.46331 (103) obj. -53.1999 iterations 16
AccILPSolver: Cbc0038I Pass 110: suminf.    3.59772 (21) obj. -53.1999 iterations 29
AccILPSolver: Cbc0038I Pass 111: suminf.    3.32914 (16) obj. -53.1999 iterations 2
AccILPSolver: Cbc0038I Pass 112: suminf.    1.32449 (14) obj. -53.9657 iterations 10
AccILPSolver: Cbc0038I Pass 113: suminf.    3.31218 (14) obj. -53.1999 iterations 8
AccILPSolver: Cbc0038I Pass 114: suminf.    7.23912 (48) obj. -53.1999 iterations 80
AccILPSolver: Cbc0038I Pass 115: suminf.    6.52497 (48) obj. -53.1999 iterations 25
AccILPSolver: Cbc0038I Pass 116: suminf.    0.97276 (11) obj. -54 iterations 15
AccILPSolver: Cbc0038I Pass 117: suminf.    0.91314 (2) obj. -54 iterations 9
AccILPSolver: Cbc0038I Pass 118: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 119: suminf.    0.91314 (2) obj. -54 iterations 1
AccILPSolver: Cbc0038I Pass 120: suminf.    8.34385 (71) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I Pass 121: suminf.    8.05897 (52) obj. -53.1999 iterations 10
AccILPSolver: Cbc0038I Pass 122: suminf.    6.96921 (61) obj. -53.1999 iterations 73
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 186 integers at bound fixed and 0 continuous of which 9 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 793 rows 421 columns - 27 fixed gives 689, 354 - still too large
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 673 rows 345 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
AccILPSolver: Cbc0038I After 0.36 seconds - Feasibility pump exiting with objective of -51 - took 0.21 seconds
AccILPSolver: Cbc0012I Integer solution of -51 found by feasibility pump after 0 iterations and 0 nodes (0.36 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 580 rows 309 columns - 15 fixed gives 540, 283 - ok now
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 532 rows 278 columns
AccILPSolver: Cbc0031I 67 added rows had average density of 9.9701493
AccILPSolver: Cbc0013I At root node, 67 cuts changed objective from -58 to -58 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 114 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 293 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -51 best solution, best possible -58 (0.49 seconds)
AccILPSolver: Cbc0038I Full problem 1104 rows 621 columns, reduced to 630 rows 332 columns - 14 fixed gives 549, 286 - ok now
AccILPSolver: Cbc0016I Integer solution of -57 found by strong branching after 1772 iterations and 72 nodes (0.86 seconds)
AccILPSolver: Cbc0012I Integer solution of -58 found by DiveCoefficient after 1931 iterations and 85 nodes (0.91 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -58, took 1931 iterations and 85 nodes (0.91 seconds)
AccILPSolver: Cbc0032I Strong branching done 1392 times (7498 iterations), fathomed 2 nodes and fixed 12 variables
AccILPSolver: Cbc0035I Maximum depth 40, 46 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -58 to -58
AccILPSolver: Probing was tried 10 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
AccILPSolver: Gomory was tried 10 times and created 328 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
AccILPSolver: Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
AccILPSolver: FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 293 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
AccILPSolver: ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -58.00000000
AccILPSolver: Enumerated nodes:               85
AccILPSolver: Total iterations:               1931
AccILPSolver: Time (CPU seconds):             0.93
AccILPSolver: Time (Wallclock seconds):       0.95
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       0.96   (Wallclock seconds):       0.98
AccILPSolver: 
benchmarking CPU/n=128, iter=128
time                 9.652 s    (9.634 s .. 9.664 s)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 9.613 s    (9.589 s .. 9.628 s)
std dev              22.87 ms   (9.365 ms .. 29.56 ms)
variance introduced by outliers: 19% (moderately inflated)

AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-15.lp solve solu /tmp/cbc1136744-16.sol (default strategy 1)
AccILPSolver: Continuous objective value is -65 - 0.02 seconds
AccILPSolver: Cgl0002I 103 variables fixed
AccILPSolver: Cgl0003I 38 fixed, 1315 tightened bounds, 305 strengthened rows, 24 substitutions
AccILPSolver: Cgl0003I 15 fixed, 901 tightened bounds, 69 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 2 fixed, 736 tightened bounds, 6 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 0 fixed, 560 tightened bounds, 41 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 285 tightened bounds, 111 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 53 tightened bounds, 56 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 38 tightened bounds, 44 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 2 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1254 rows, 710 columns (710 integer (208 of which binary)) and 3158 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 60 integer variables out of 710 objects (710 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 90 integers unsatisfied sum - 5.09163
AccILPSolver: Cbc0038I Pass   1: suminf.    2.61995 (97) obj. -64.8606 iterations 109
AccILPSolver: Cbc0038I Pass   2: suminf.    0.46526 (60) obj. -60.9719 iterations 24
AccILPSolver: Cbc0038I Pass   3: suminf.    0.13090 (40) obj. -59.9865 iterations 5
AccILPSolver: Cbc0038I Pass   4: suminf.    0.00802 (8) obj. -58 iterations 24
AccILPSolver: Cbc0038I Pass   5: suminf.    0.07559 (23) obj. -58 iterations 6
AccILPSolver: Cbc0038I Pass   6: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   8: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   9: suminf.    0.12226 (15) obj. -45.9653 iterations 101
AccILPSolver: Cbc0038I Pass  10: suminf.    0.15754 (28) obj. -45.9674 iterations 19
AccILPSolver: Cbc0038I Pass  11: suminf.    0.09241 (26) obj. -45 iterations 7
AccILPSolver: Cbc0038I Pass  12: suminf.    0.03209 (10) obj. -45 iterations 5
AccILPSolver: Cbc0038I Pass  13: suminf.    0.00599 (3) obj. -45 iterations 3
AccILPSolver: Cbc0038I Pass  14: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  16: suminf.    0.67643 (47) obj. -40 iterations 122
AccILPSolver: Cbc0038I Pass  17: suminf.    0.66523 (46) obj. -40 iterations 13
AccILPSolver: Cbc0038I Pass  18: suminf.    0.00401 (4) obj. -40 iterations 12
AccILPSolver: Cbc0038I Pass  19: suminf.    0.00198 (2) obj. -40 iterations 6
AccILPSolver: Cbc0038I Pass  20: suminf.    0.00198 (2) obj. -40 iterations 0
AccILPSolver: Cbc0038I Pass  21: suminf.    0.06978 (13) obj. -36 iterations 49
AccILPSolver: Cbc0038I Pass  22: suminf.    0.06978 (13) obj. -36 iterations 5
AccILPSolver: Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -36 iterations 10
AccILPSolver: Cbc0038I Solution found of -36
AccILPSolver: Cbc0038I Cleaned solution of -36
AccILPSolver: Cbc0038I Rounding solution of -43 is better than previous of -36
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous of which 15 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 923 rows 501 columns - 20 fixed gives 864, 464 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 836 rows 452 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -46.0999
AccILPSolver: Cbc0038I Pass  24: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  25: suminf.    0.76187 (72) obj. -62.9268 iterations 10
AccILPSolver: Cbc0038I Pass  26: suminf.    0.13090 (40) obj. -59.9865 iterations 16
AccILPSolver: Cbc0038I Pass  27: suminf.    0.00802 (8) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  28: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  29: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  30: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  31: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  32: suminf.   15.48197 (189) obj. -46.0999 iterations 143
AccILPSolver: Cbc0038I Pass  33: suminf.    0.54277 (41) obj. -46.0999 iterations 24
AccILPSolver: Cbc0038I Pass  34: suminf.    1.17053 (31) obj. -46.0999 iterations 21
AccILPSolver: Cbc0038I Pass  35: suminf.   21.21194 (231) obj. -46.0999 iterations 4
AccILPSolver: Cbc0038I Pass  36: suminf.    0.00599 (4) obj. -47 iterations 14
AccILPSolver: Cbc0038I Pass  37: suminf.    0.00406 (3) obj. -47 iterations 3
AccILPSolver: Cbc0038I Pass  38: suminf.    0.00199 (2) obj. -47 iterations 2
AccILPSolver: Cbc0038I Pass  39: suminf.    0.00199 (2) obj. -47 iterations 0
AccILPSolver: Cbc0038I Pass  40: suminf.    8.99389 (113) obj. -46.0999 iterations 121
AccILPSolver: Cbc0038I Pass  41: suminf.    8.99343 (113) obj. -46.0999 iterations 16
AccILPSolver: Cbc0038I Pass  42: suminf.    0.00000 (0) obj. -47 iterations 14
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous of which 12 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 928 rows 493 columns - 27 fixed gives 847, 447 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 819 rows 435 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -51.3999
AccILPSolver: Cbc0038I Pass  43: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  44: suminf.    1.00556 (80) obj. -62.9268 iterations 8
AccILPSolver: Cbc0038I Pass  45: suminf.    0.48514 (61) obj. -61.952 iterations 13
AccILPSolver: Cbc0038I Pass  46: suminf.    0.12153 (39) obj. -58.9958 iterations 12
AccILPSolver: Cbc0038I Pass  47: suminf.    0.00802 (8) obj. -58 iterations 21
AccILPSolver: Cbc0038I Pass  48: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  49: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  50: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  51: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  52: suminf.   56.16081 (163) obj. -51.3999 iterations 115
AccILPSolver: Cbc0038I Pass  53: suminf.    0.43686 (16) obj. -51.3999 iterations 20
AccILPSolver: Cbc0038I Pass  54: suminf.    0.03185 (11) obj. -52 iterations 12
AccILPSolver: Cbc0038I Pass  55: suminf.    0.03185 (11) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  56: suminf.    8.55887 (63) obj. -51.3999 iterations 99
AccILPSolver: Cbc0038I Pass  57: suminf.    4.83194 (51) obj. -51.3999 iterations 39
AccILPSolver: Cbc0038I Pass  58: suminf.    0.51691 (30) obj. -51.3999 iterations 14
AccILPSolver: Cbc0038I Pass  59: suminf.    0.13816 (34) obj. -51.9958 iterations 6
AccILPSolver: Cbc0038I Pass  60: suminf.   17.49201 (70) obj. -51.3999 iterations 10
AccILPSolver: Cbc0038I Pass  61: suminf.    0.00200 (2) obj. -52 iterations 21
AccILPSolver: Cbc0038I Pass  62: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  63: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  64: suminf.   22.93048 (63) obj. -51.3999 iterations 106
AccILPSolver: Cbc0038I Pass  65: suminf.   22.93048 (63) obj. -51.3999 iterations 30
AccILPSolver: Cbc0038I Pass  66: suminf.    1.16056 (4) obj. -51.3999 iterations 40
AccILPSolver: Cbc0038I Pass  67: suminf.    1.16056 (4) obj. -51.3999 iterations 0
AccILPSolver: Cbc0038I Pass  68: suminf.    0.00000 (0) obj. -52 iterations 10
AccILPSolver: Cbc0038I Solution found of -52
AccILPSolver: Cbc0038I Cleaned solution of -52
AccILPSolver: Cbc0038I Rounding solution of -53 is better than previous of -52
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 185 integers at bound fixed and 0 continuous of which 17 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 945 rows 504 columns - 17 fixed gives 886, 472 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 858 rows 458 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -57.2999
AccILPSolver: Cbc0038I Pass  69: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  70: suminf.    0.30627 (52) obj. -60.9719 iterations 25
AccILPSolver: Cbc0038I Pass  71: suminf.    0.04237 (30) obj. -58 iterations 11
AccILPSolver: Cbc0038I Pass  72: suminf.    0.00802 (8) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass  73: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  74: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  75: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  76: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  77: suminf.   45.24373 (174) obj. -57.2999 iterations 131
AccILPSolver: Cbc0038I Pass  78: suminf.   35.49310 (153) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  79: suminf.   27.86567 (120) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  80: suminf.   27.86567 (120) obj. -57.2999 iterations 0
AccILPSolver: Cbc0038I Pass  81: suminf.    0.08709 (27) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  82: suminf.    0.08709 (27) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  83: suminf.    0.04495 (15) obj. -58 iterations 8
AccILPSolver: Cbc0038I Pass  84: suminf.    0.04395 (14) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  85: suminf.    0.04395 (14) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  86: suminf.    0.88088 (31) obj. -57.2999 iterations 81
AccILPSolver: Cbc0038I Pass  87: suminf.    0.71094 (22) obj. -57.2999 iterations 18
AccILPSolver: Cbc0038I Pass  88: suminf.    0.31718 (16) obj. -57.9674 iterations 19
AccILPSolver: Cbc0038I Pass  89: suminf.    0.31718 (16) obj. -57.9674 iterations 2
AccILPSolver: Cbc0038I Pass  90: suminf.    3.00329 (14) obj. -57.2999 iterations 24
AccILPSolver: Cbc0038I Pass  91: suminf.    0.00399 (4) obj. -58 iterations 9
AccILPSolver: Cbc0038I Pass  92: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  93: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  94: suminf.   11.76728 (75) obj. -57.2999 iterations 92
AccILPSolver: Cbc0038I Pass  95: suminf.   12.03051 (75) obj. -57.2999 iterations 14
AccILPSolver: Cbc0038I Pass  96: suminf.    0.93845 (17) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  97: suminf.    0.93845 (17) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  98: suminf.    0.92277 (2) obj. -58 iterations 3
AccILPSolver: Cbc0038I Pass  99: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 100: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 101: suminf.   11.84153 (55) obj. -57.2999 iterations 73
AccILPSolver: Cbc0038I Pass 102: suminf.   11.86276 (63) obj. -57.2999 iterations 26
AccILPSolver: Cbc0038I Pass 103: suminf.    0.10003 (16) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass 104: suminf.    0.07503 (15) obj. -58 iterations 2
AccILPSolver: Cbc0038I Pass 105: suminf.    0.00000 (0) obj. -58 iterations 6
AccILPSolver: Cbc0038I Solution found of -58
AccILPSolver: Cbc0038I Cleaned solution of -58
AccILPSolver: Cbc0038I Rounding solution of -59 is better than previous of -58
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 251 integers at bound fixed and 0 continuous of which 23 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 814 rows 441 columns - 12 fixed gives 750, 406 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 726 rows 395 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -61.4999
AccILPSolver: Cbc0038I Pass 106: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass 107: suminf.    0.48514 (61) obj. -61.952 iterations 20
AccILPSolver: Cbc0038I Pass 108: suminf.    4.66742 (63) obj. -61.4999 iterations 18
AccILPSolver: Cbc0038I Pass 109: suminf.    0.93160 (63) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 110: suminf.    4.70799 (60) obj. -61.4999 iterations 30
AccILPSolver: Cbc0038I Pass 111: suminf.    0.97217 (60) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 112: suminf.    4.70799 (60) obj. -61.4999 iterations 21
AccILPSolver: Cbc0038I Pass 113: suminf.    4.33501 (50) obj. -61.4999 iterations 107
AccILPSolver: Cbc0038I Pass 114: suminf.    1.02062 (72) obj. -61.915 iterations 29
AccILPSolver: Cbc0038I Pass 115: suminf.    7.41824 (65) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 116: suminf.    1.27189 (68) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 117: suminf.    4.27800 (56) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 118: suminf.    0.74389 (61) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 119: suminf.    4.27800 (56) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 120: suminf.    3.30475 (83) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 121: suminf.    2.88533 (80) obj. -61.9257 iterations 25
AccILPSolver: Cbc0038I Pass 122: suminf.    6.52600 (68) obj. -61.4999 iterations 32
AccILPSolver: Cbc0038I Pass 123: suminf.    0.70253 (48) obj. -61.9642 iterations 30
AccILPSolver: Cbc0038I Pass 124: suminf.    5.59866 (44) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 125: suminf.    0.51239 (42) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 126: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 127: suminf.    0.51239 (42) obj. -61.9642 iterations 14
AccILPSolver: Cbc0038I Pass 128: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 129: suminf.    0.90202 (26) obj. -62.9642 iterations 18
AccILPSolver: Cbc0038I Pass 130: suminf.    0.04695 (14) obj. -62 iterations 5
AccILPSolver: Cbc0038I Pass 131: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 132: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 133: suminf.   38.37866 (117) obj. -61.4999 iterations 79
AccILPSolver: Cbc0038I Pass 134: suminf.    0.76837 (48) obj. -61.9655 iterations 32
AccILPSolver: Cbc0038I Pass 135: suminf.    2.14827 (55) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 136: suminf.    0.54669 (47) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 137: suminf.    6.11638 (47) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 138: suminf.    0.52092 (40) obj. -61.9642 iterations 16
AccILPSolver: Cbc0038I Pass 139: suminf.    6.09061 (40) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 140: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 141: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 142: suminf.    0.52092 (40) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 143: suminf.    6.09061 (40) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 144: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 145: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 146: suminf.    0.47542 (25) obj. -61.9642 iterations 21
AccILPSolver: Cbc0038I Pass 147: suminf.    6.04511 (25) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 148: suminf.    0.47542 (25) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 149: suminf.    1.29359 (46) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 150: suminf.    0.82116 (44) obj. -61.9643 iterations 21
AccILPSolver: Cbc0038I Pass 151: suminf.   85.43206 (206) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 152: suminf.    0.11042 (34) obj. -61.9958 iterations 9
AccILPSolver: Cbc0038I Pass 153: suminf.    1.05081 (17) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 154: suminf.    0.05926 (17) obj. -61.9958 iterations 8
AccILPSolver: Cbc0038I Pass 155: suminf.    1.05081 (17) obj. -61.4999 iterations 9
AccILPSolver: Cbc0038I Pass 156: suminf.    2.17794 (47) obj. -61.4999 iterations 86
AccILPSolver: Cbc0038I Pass 157: suminf.    0.93100 (43) obj. -61.9202 iterations 29
AccILPSolver: Cbc0038I Pass 158: suminf.    1.07933 (28) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 159: suminf.    0.22001 (28) obj. -61.9296 iterations 18
AccILPSolver: Cbc0038I Pass 160: suminf.    1.05511 (25) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 161: suminf.    0.19579 (25) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 162: suminf.    1.05208 (22) obj. -61.4999 iterations 19
AccILPSolver: Cbc0038I Pass 163: suminf.    0.19276 (22) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 164: suminf.   95.93635 (260) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 165: suminf.   24.32538 (260) obj. -61.9444 iterations 15
AccILPSolver: Cbc0038I Pass 166: suminf.    1.09254 (45) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 167: suminf.    0.62701 (45) obj. -61.9655 iterations 9
AccILPSolver: Cbc0038I Pass 168: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 169: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 170: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 171: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 172: suminf.  113.01572 (282) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 173: suminf.    0.88832 (52) obj. -61.9247 iterations 24
AccILPSolver: Cbc0038I Pass 174: suminf.    0.88832 (52) obj. -61.9247 iterations 0
AccILPSolver: Cbc0038I Pass 175: suminf.    5.38397 (57) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 176: suminf.    0.72096 (44) obj. -61.9456 iterations 10
AccILPSolver: Cbc0038I Pass 177: suminf.    0.72096 (44) obj. -61.9456 iterations 0
AccILPSolver: Cbc0038I Pass 178: suminf.    9.12061 (44) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 179: suminf.    1.98893 (60) obj. -61.4999 iterations 66
AccILPSolver: Cbc0038I Pass 180: suminf.    0.74544 (50) obj. -61.9456 iterations 29
AccILPSolver: Cbc0038I Pass 181: suminf.    1.73499 (50) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 182: suminf.    0.95453 (47) obj. -61.9603 iterations 11
AccILPSolver: Cbc0038I Pass 183: suminf.    9.25443 (49) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 184: suminf.    0.57506 (39) obj. -61.9696 iterations 14
AccILPSolver: Cbc0038I Pass 185: suminf.    0.57506 (39) obj. -61.9696 iterations 0
AccILPSolver: Cbc0038I Pass 186: suminf.    9.02603 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 187: suminf.    0.57506 (39) obj. -61.9696 iterations 9
AccILPSolver: Cbc0038I Pass 188: suminf.   83.78426 (237) obj. -61.4999 iterations 77
AccILPSolver: Cbc0038I Pass 189: suminf.    0.93026 (45) obj. -61.9151 iterations 34
AccILPSolver: Cbc0038I Pass 190: suminf.   75.16068 (188) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 191: suminf.    0.35829 (36) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 192: suminf.    1.23764 (34) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 193: suminf.    0.34007 (34) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 194: suminf.    1.16340 (16) obj. -61.4999 iterations 23
AccILPSolver: Cbc0038I Pass 195: suminf.    0.26385 (15) obj. -61.9487 iterations 15
AccILPSolver: Cbc0038I Pass 196: suminf.    1.15937 (14) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 197: suminf.    0.26180 (14) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 198: suminf.    1.26318 (30) obj. -61.4999 iterations 64
AccILPSolver: Cbc0038I Pass 199: suminf.    0.63017 (30) obj. -61.9141 iterations 17
AccILPSolver: Cbc0038I Pass 200: suminf.    1.18533 (20) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 201: suminf.    0.28776 (20) obj. -61.9487 iterations 13
AccILPSolver: Cbc0038I Pass 202: suminf.    1.18332 (19) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 203: suminf.    0.28575 (19) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 204: suminf.    1.91468 (66) obj. -61.4999 iterations 84
AccILPSolver: Cbc0038I Pass 205: suminf.    4.90122 (55) obj. -61.4999 iterations 101
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 140 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 1062 rows 563 columns - 13 fixed gives 1025, 539 - still too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.55 seconds)
AccILPSolver: Cbc0038I After 0.55 seconds - Feasibility pump exiting with objective of -59 - took 0.38 seconds
AccILPSolver: Cbc0012I Integer solution of -59 found by feasibility pump after 0 iterations and 0 nodes (0.55 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 580 rows 306 columns
AccILPSolver: Cbc0031I 81 added rows had average density of 9.7654321
AccILPSolver: Cbc0013I At root node, 81 cuts changed objective from -65 to -65 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 157 row cuts average 2.3 elements, 0 column cuts (40 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 456 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 14 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 463 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 7 (ZeroHalf) - 32 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -59 best solution, best possible -65 (0.76 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 699 rows 360 columns - 4 fixed gives 684, 352 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 645 rows 339 columns - too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 690 rows 356 columns - 4 fixed gives 675, 348 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 643 rows 336 columns - too large
AccILPSolver: Cbc0016I Integer solution of -64 found by strong branching after 1724 iterations and 93 nodes (1.29 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 226 rows 116 columns
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 237 rows 122 columns
AccILPSolver: Cbc0012I Integer solution of -65 found by rounding after 5322 iterations and 374 nodes (1.61 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -65, took 5322 iterations and 374 nodes (1.61 seconds)
AccILPSolver: Cbc0032I Strong branching done 1564 times (6193 iterations), fathomed 1 nodes and fixed 8 variables
AccILPSolver: Cbc0035I Maximum depth 44, 58 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -65 to -65
AccILPSolver: Probing was tried 10 times and created 157 cuts of which 40 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: Gomory was tried 10 times and created 456 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
AccILPSolver: Knapsack was tried 10 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: FlowCover was tried 10 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 463 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
AccILPSolver: ZeroHalf was tried 10 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -65.00000000
AccILPSolver: Enumerated nodes:               374
AccILPSolver: Total iterations:               5322
AccILPSolver: Time (CPU seconds):             1.64
AccILPSolver: Time (Wallclock seconds):       1.67
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       1.68   (Wallclock seconds):       1.71
AccILPSolver: 
benchmarking CPU/n=256, iter=4
time                 761.8 ms   (711.2 ms .. 801.0 ms)
                     0.999 R²   (0.998 R² .. 1.000 R²)
mean                 772.2 ms   (763.2 ms .. 782.1 ms)
std dev              10.57 ms   (3.582 ms .. 14.51 ms)
variance introduced by outliers: 19% (moderately inflated)

AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-17.lp solve solu /tmp/cbc1136744-18.sol (default strategy 1)
AccILPSolver: Continuous objective value is -65 - 0.02 seconds
AccILPSolver: Cgl0002I 103 variables fixed
AccILPSolver: Cgl0003I 38 fixed, 1315 tightened bounds, 305 strengthened rows, 24 substitutions
AccILPSolver: Cgl0003I 15 fixed, 901 tightened bounds, 69 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 2 fixed, 736 tightened bounds, 6 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 0 fixed, 560 tightened bounds, 41 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 285 tightened bounds, 111 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 53 tightened bounds, 56 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 38 tightened bounds, 44 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 2 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1254 rows, 710 columns (710 integer (208 of which binary)) and 3158 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 60 integer variables out of 710 objects (710 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 90 integers unsatisfied sum - 5.09163
AccILPSolver: Cbc0038I Pass   1: suminf.    2.61995 (97) obj. -64.8606 iterations 109
AccILPSolver: Cbc0038I Pass   2: suminf.    0.46526 (60) obj. -60.9719 iterations 24
AccILPSolver: Cbc0038I Pass   3: suminf.    0.13090 (40) obj. -59.9865 iterations 5
AccILPSolver: Cbc0038I Pass   4: suminf.    0.00802 (8) obj. -58 iterations 24
AccILPSolver: Cbc0038I Pass   5: suminf.    0.07559 (23) obj. -58 iterations 6
AccILPSolver: Cbc0038I Pass   6: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   8: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   9: suminf.    0.12226 (15) obj. -45.9653 iterations 101
AccILPSolver: Cbc0038I Pass  10: suminf.    0.15754 (28) obj. -45.9674 iterations 19
AccILPSolver: Cbc0038I Pass  11: suminf.    0.09241 (26) obj. -45 iterations 7
AccILPSolver: Cbc0038I Pass  12: suminf.    0.03209 (10) obj. -45 iterations 5
AccILPSolver: Cbc0038I Pass  13: suminf.    0.00599 (3) obj. -45 iterations 3
AccILPSolver: Cbc0038I Pass  14: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  16: suminf.    0.67643 (47) obj. -40 iterations 122
AccILPSolver: Cbc0038I Pass  17: suminf.    0.66523 (46) obj. -40 iterations 13
AccILPSolver: Cbc0038I Pass  18: suminf.    0.00401 (4) obj. -40 iterations 12
AccILPSolver: Cbc0038I Pass  19: suminf.    0.00198 (2) obj. -40 iterations 6
AccILPSolver: Cbc0038I Pass  20: suminf.    0.00198 (2) obj. -40 iterations 0
AccILPSolver: Cbc0038I Pass  21: suminf.    0.06978 (13) obj. -36 iterations 49
AccILPSolver: Cbc0038I Pass  22: suminf.    0.06978 (13) obj. -36 iterations 5
AccILPSolver: Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -36 iterations 10
AccILPSolver: Cbc0038I Solution found of -36
AccILPSolver: Cbc0038I Cleaned solution of -36
AccILPSolver: Cbc0038I Rounding solution of -43 is better than previous of -36
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous of which 15 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 923 rows 501 columns - 20 fixed gives 864, 464 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 836 rows 452 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -46.0999
AccILPSolver: Cbc0038I Pass  24: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  25: suminf.    0.76187 (72) obj. -62.9268 iterations 10
AccILPSolver: Cbc0038I Pass  26: suminf.    0.13090 (40) obj. -59.9865 iterations 16
AccILPSolver: Cbc0038I Pass  27: suminf.    0.00802 (8) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  28: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  29: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  30: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  31: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  32: suminf.   15.48197 (189) obj. -46.0999 iterations 143
AccILPSolver: Cbc0038I Pass  33: suminf.    0.54277 (41) obj. -46.0999 iterations 24
AccILPSolver: Cbc0038I Pass  34: suminf.    1.17053 (31) obj. -46.0999 iterations 21
AccILPSolver: Cbc0038I Pass  35: suminf.   21.21194 (231) obj. -46.0999 iterations 4
AccILPSolver: Cbc0038I Pass  36: suminf.    0.00599 (4) obj. -47 iterations 14
AccILPSolver: Cbc0038I Pass  37: suminf.    0.00406 (3) obj. -47 iterations 3
AccILPSolver: Cbc0038I Pass  38: suminf.    0.00199 (2) obj. -47 iterations 2
AccILPSolver: Cbc0038I Pass  39: suminf.    0.00199 (2) obj. -47 iterations 0
AccILPSolver: Cbc0038I Pass  40: suminf.    8.99389 (113) obj. -46.0999 iterations 121
AccILPSolver: Cbc0038I Pass  41: suminf.    8.99343 (113) obj. -46.0999 iterations 16
AccILPSolver: Cbc0038I Pass  42: suminf.    0.00000 (0) obj. -47 iterations 14
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous of which 12 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 928 rows 493 columns - 27 fixed gives 847, 447 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 819 rows 435 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -51.3999
AccILPSolver: Cbc0038I Pass  43: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  44: suminf.    1.00556 (80) obj. -62.9268 iterations 8
AccILPSolver: Cbc0038I Pass  45: suminf.    0.48514 (61) obj. -61.952 iterations 13
AccILPSolver: Cbc0038I Pass  46: suminf.    0.12153 (39) obj. -58.9958 iterations 12
AccILPSolver: Cbc0038I Pass  47: suminf.    0.00802 (8) obj. -58 iterations 21
AccILPSolver: Cbc0038I Pass  48: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  49: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  50: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  51: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  52: suminf.   56.16081 (163) obj. -51.3999 iterations 115
AccILPSolver: Cbc0038I Pass  53: suminf.    0.43686 (16) obj. -51.3999 iterations 20
AccILPSolver: Cbc0038I Pass  54: suminf.    0.03185 (11) obj. -52 iterations 12
AccILPSolver: Cbc0038I Pass  55: suminf.    0.03185 (11) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  56: suminf.    8.55887 (63) obj. -51.3999 iterations 99
AccILPSolver: Cbc0038I Pass  57: suminf.    4.83194 (51) obj. -51.3999 iterations 39
AccILPSolver: Cbc0038I Pass  58: suminf.    0.51691 (30) obj. -51.3999 iterations 14
AccILPSolver: Cbc0038I Pass  59: suminf.    0.13816 (34) obj. -51.9958 iterations 6
AccILPSolver: Cbc0038I Pass  60: suminf.   17.49201 (70) obj. -51.3999 iterations 10
AccILPSolver: Cbc0038I Pass  61: suminf.    0.00200 (2) obj. -52 iterations 21
AccILPSolver: Cbc0038I Pass  62: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  63: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  64: suminf.   22.93048 (63) obj. -51.3999 iterations 106
AccILPSolver: Cbc0038I Pass  65: suminf.   22.93048 (63) obj. -51.3999 iterations 30
AccILPSolver: Cbc0038I Pass  66: suminf.    1.16056 (4) obj. -51.3999 iterations 40
AccILPSolver: Cbc0038I Pass  67: suminf.    1.16056 (4) obj. -51.3999 iterations 0
AccILPSolver: Cbc0038I Pass  68: suminf.    0.00000 (0) obj. -52 iterations 10
AccILPSolver: Cbc0038I Solution found of -52
AccILPSolver: Cbc0038I Cleaned solution of -52
AccILPSolver: Cbc0038I Rounding solution of -53 is better than previous of -52
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 185 integers at bound fixed and 0 continuous of which 17 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 945 rows 504 columns - 17 fixed gives 886, 472 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 858 rows 458 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -57.2999
AccILPSolver: Cbc0038I Pass  69: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  70: suminf.    0.30627 (52) obj. -60.9719 iterations 25
AccILPSolver: Cbc0038I Pass  71: suminf.    0.04237 (30) obj. -58 iterations 11
AccILPSolver: Cbc0038I Pass  72: suminf.    0.00802 (8) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass  73: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  74: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  75: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  76: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  77: suminf.   45.24373 (174) obj. -57.2999 iterations 131
AccILPSolver: Cbc0038I Pass  78: suminf.   35.49310 (153) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  79: suminf.   27.86567 (120) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  80: suminf.   27.86567 (120) obj. -57.2999 iterations 0
AccILPSolver: Cbc0038I Pass  81: suminf.    0.08709 (27) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  82: suminf.    0.08709 (27) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  83: suminf.    0.04495 (15) obj. -58 iterations 8
AccILPSolver: Cbc0038I Pass  84: suminf.    0.04395 (14) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  85: suminf.    0.04395 (14) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  86: suminf.    0.88088 (31) obj. -57.2999 iterations 81
AccILPSolver: Cbc0038I Pass  87: suminf.    0.71094 (22) obj. -57.2999 iterations 18
AccILPSolver: Cbc0038I Pass  88: suminf.    0.31718 (16) obj. -57.9674 iterations 19
AccILPSolver: Cbc0038I Pass  89: suminf.    0.31718 (16) obj. -57.9674 iterations 2
AccILPSolver: Cbc0038I Pass  90: suminf.    3.00329 (14) obj. -57.2999 iterations 24
AccILPSolver: Cbc0038I Pass  91: suminf.    0.00399 (4) obj. -58 iterations 9
AccILPSolver: Cbc0038I Pass  92: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  93: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  94: suminf.   11.76728 (75) obj. -57.2999 iterations 92
AccILPSolver: Cbc0038I Pass  95: suminf.   12.03051 (75) obj. -57.2999 iterations 14
AccILPSolver: Cbc0038I Pass  96: suminf.    0.93845 (17) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  97: suminf.    0.93845 (17) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  98: suminf.    0.92277 (2) obj. -58 iterations 3
AccILPSolver: Cbc0038I Pass  99: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 100: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 101: suminf.   11.84153 (55) obj. -57.2999 iterations 73
AccILPSolver: Cbc0038I Pass 102: suminf.   11.86276 (63) obj. -57.2999 iterations 26
AccILPSolver: Cbc0038I Pass 103: suminf.    0.10003 (16) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass 104: suminf.    0.07503 (15) obj. -58 iterations 2
AccILPSolver: Cbc0038I Pass 105: suminf.    0.00000 (0) obj. -58 iterations 6
AccILPSolver: Cbc0038I Solution found of -58
AccILPSolver: Cbc0038I Cleaned solution of -58
AccILPSolver: Cbc0038I Rounding solution of -59 is better than previous of -58
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 251 integers at bound fixed and 0 continuous of which 23 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 814 rows 441 columns - 12 fixed gives 750, 406 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 726 rows 395 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -61.4999
AccILPSolver: Cbc0038I Pass 106: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass 107: suminf.    0.48514 (61) obj. -61.952 iterations 20
AccILPSolver: Cbc0038I Pass 108: suminf.    4.66742 (63) obj. -61.4999 iterations 18
AccILPSolver: Cbc0038I Pass 109: suminf.    0.93160 (63) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 110: suminf.    4.70799 (60) obj. -61.4999 iterations 30
AccILPSolver: Cbc0038I Pass 111: suminf.    0.97217 (60) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 112: suminf.    4.70799 (60) obj. -61.4999 iterations 21
AccILPSolver: Cbc0038I Pass 113: suminf.    4.33501 (50) obj. -61.4999 iterations 107
AccILPSolver: Cbc0038I Pass 114: suminf.    1.02062 (72) obj. -61.915 iterations 29
AccILPSolver: Cbc0038I Pass 115: suminf.    7.41824 (65) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 116: suminf.    1.27189 (68) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 117: suminf.    4.27800 (56) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 118: suminf.    0.74389 (61) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 119: suminf.    4.27800 (56) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 120: suminf.    3.30475 (83) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 121: suminf.    2.88533 (80) obj. -61.9257 iterations 25
AccILPSolver: Cbc0038I Pass 122: suminf.    6.52600 (68) obj. -61.4999 iterations 32
AccILPSolver: Cbc0038I Pass 123: suminf.    0.70253 (48) obj. -61.9642 iterations 30
AccILPSolver: Cbc0038I Pass 124: suminf.    5.59866 (44) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 125: suminf.    0.51239 (42) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 126: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 127: suminf.    0.51239 (42) obj. -61.9642 iterations 14
AccILPSolver: Cbc0038I Pass 128: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 129: suminf.    0.90202 (26) obj. -62.9642 iterations 18
AccILPSolver: Cbc0038I Pass 130: suminf.    0.04695 (14) obj. -62 iterations 5
AccILPSolver: Cbc0038I Pass 131: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 132: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 133: suminf.   38.37866 (117) obj. -61.4999 iterations 79
AccILPSolver: Cbc0038I Pass 134: suminf.    0.76837 (48) obj. -61.9655 iterations 32
AccILPSolver: Cbc0038I Pass 135: suminf.    2.14827 (55) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 136: suminf.    0.54669 (47) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 137: suminf.    6.11638 (47) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 138: suminf.    0.52092 (40) obj. -61.9642 iterations 16
AccILPSolver: Cbc0038I Pass 139: suminf.    6.09061 (40) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 140: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 141: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 142: suminf.    0.52092 (40) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 143: suminf.    6.09061 (40) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 144: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 145: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 146: suminf.    0.47542 (25) obj. -61.9642 iterations 21
AccILPSolver: Cbc0038I Pass 147: suminf.    6.04511 (25) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 148: suminf.    0.47542 (25) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 149: suminf.    1.29359 (46) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 150: suminf.    0.82116 (44) obj. -61.9643 iterations 21
AccILPSolver: Cbc0038I Pass 151: suminf.   85.43206 (206) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 152: suminf.    0.11042 (34) obj. -61.9958 iterations 9
AccILPSolver: Cbc0038I Pass 153: suminf.    1.05081 (17) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 154: suminf.    0.05926 (17) obj. -61.9958 iterations 8
AccILPSolver: Cbc0038I Pass 155: suminf.    1.05081 (17) obj. -61.4999 iterations 9
AccILPSolver: Cbc0038I Pass 156: suminf.    2.17794 (47) obj. -61.4999 iterations 86
AccILPSolver: Cbc0038I Pass 157: suminf.    0.93100 (43) obj. -61.9202 iterations 29
AccILPSolver: Cbc0038I Pass 158: suminf.    1.07933 (28) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 159: suminf.    0.22001 (28) obj. -61.9296 iterations 18
AccILPSolver: Cbc0038I Pass 160: suminf.    1.05511 (25) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 161: suminf.    0.19579 (25) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 162: suminf.    1.05208 (22) obj. -61.4999 iterations 19
AccILPSolver: Cbc0038I Pass 163: suminf.    0.19276 (22) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 164: suminf.   95.93635 (260) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 165: suminf.   24.32538 (260) obj. -61.9444 iterations 15
AccILPSolver: Cbc0038I Pass 166: suminf.    1.09254 (45) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 167: suminf.    0.62701 (45) obj. -61.9655 iterations 9
AccILPSolver: Cbc0038I Pass 168: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 169: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 170: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 171: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 172: suminf.  113.01572 (282) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 173: suminf.    0.88832 (52) obj. -61.9247 iterations 24
AccILPSolver: Cbc0038I Pass 174: suminf.    0.88832 (52) obj. -61.9247 iterations 0
AccILPSolver: Cbc0038I Pass 175: suminf.    5.38397 (57) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 176: suminf.    0.72096 (44) obj. -61.9456 iterations 10
AccILPSolver: Cbc0038I Pass 177: suminf.    0.72096 (44) obj. -61.9456 iterations 0
AccILPSolver: Cbc0038I Pass 178: suminf.    9.12061 (44) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 179: suminf.    1.98893 (60) obj. -61.4999 iterations 66
AccILPSolver: Cbc0038I Pass 180: suminf.    0.74544 (50) obj. -61.9456 iterations 29
AccILPSolver: Cbc0038I Pass 181: suminf.    1.73499 (50) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 182: suminf.    0.95453 (47) obj. -61.9603 iterations 11
AccILPSolver: Cbc0038I Pass 183: suminf.    9.25443 (49) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 184: suminf.    0.57506 (39) obj. -61.9696 iterations 14
AccILPSolver: Cbc0038I Pass 185: suminf.    0.57506 (39) obj. -61.9696 iterations 0
AccILPSolver: Cbc0038I Pass 186: suminf.    9.02603 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 187: suminf.    0.57506 (39) obj. -61.9696 iterations 9
AccILPSolver: Cbc0038I Pass 188: suminf.   83.78426 (237) obj. -61.4999 iterations 77
AccILPSolver: Cbc0038I Pass 189: suminf.    0.93026 (45) obj. -61.9151 iterations 34
AccILPSolver: Cbc0038I Pass 190: suminf.   75.16068 (188) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 191: suminf.    0.35829 (36) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 192: suminf.    1.23764 (34) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 193: suminf.    0.34007 (34) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 194: suminf.    1.16340 (16) obj. -61.4999 iterations 23
AccILPSolver: Cbc0038I Pass 195: suminf.    0.26385 (15) obj. -61.9487 iterations 15
AccILPSolver: Cbc0038I Pass 196: suminf.    1.15937 (14) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 197: suminf.    0.26180 (14) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 198: suminf.    1.26318 (30) obj. -61.4999 iterations 64
AccILPSolver: Cbc0038I Pass 199: suminf.    0.63017 (30) obj. -61.9141 iterations 17
AccILPSolver: Cbc0038I Pass 200: suminf.    1.18533 (20) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 201: suminf.    0.28776 (20) obj. -61.9487 iterations 13
AccILPSolver: Cbc0038I Pass 202: suminf.    1.18332 (19) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 203: suminf.    0.28575 (19) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 204: suminf.    1.91468 (66) obj. -61.4999 iterations 84
AccILPSolver: Cbc0038I Pass 205: suminf.    4.90122 (55) obj. -61.4999 iterations 101
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 140 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 1062 rows 563 columns - 13 fixed gives 1025, 539 - still too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.54 seconds)
AccILPSolver: Cbc0038I After 0.54 seconds - Feasibility pump exiting with objective of -59 - took 0.39 seconds
AccILPSolver: Cbc0012I Integer solution of -59 found by feasibility pump after 0 iterations and 0 nodes (0.54 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 580 rows 306 columns
AccILPSolver: Cbc0031I 81 added rows had average density of 9.7654321
AccILPSolver: Cbc0013I At root node, 81 cuts changed objective from -65 to -65 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 157 row cuts average 2.3 elements, 0 column cuts (40 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 456 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 14 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 463 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 7 (ZeroHalf) - 32 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -59 best solution, best possible -65 (0.74 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 699 rows 360 columns - 4 fixed gives 684, 352 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 645 rows 339 columns - too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 690 rows 356 columns - 4 fixed gives 675, 348 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 643 rows 336 columns - too large
AccILPSolver: Cbc0016I Integer solution of -64 found by strong branching after 1724 iterations and 93 nodes (1.29 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 226 rows 116 columns
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 237 rows 122 columns
AccILPSolver: Cbc0012I Integer solution of -65 found by rounding after 5322 iterations and 374 nodes (1.61 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -65, took 5322 iterations and 374 nodes (1.62 seconds)
AccILPSolver: Cbc0032I Strong branching done 1564 times (6193 iterations), fathomed 1 nodes and fixed 8 variables
AccILPSolver: Cbc0035I Maximum depth 44, 58 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -65 to -65
AccILPSolver: Probing was tried 10 times and created 157 cuts of which 40 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: Gomory was tried 10 times and created 456 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
AccILPSolver: Knapsack was tried 10 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: FlowCover was tried 10 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 463 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
AccILPSolver: ZeroHalf was tried 10 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -65.00000000
AccILPSolver: Enumerated nodes:               374
AccILPSolver: Total iterations:               5322
AccILPSolver: Time (CPU seconds):             1.66
AccILPSolver: Time (Wallclock seconds):       1.70
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       1.69   (Wallclock seconds):       1.73
AccILPSolver: 
benchmarking CPU/n=256, iter=8
time                 1.544 s    (1.504 s .. 1.572 s)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 1.551 s    (1.545 s .. 1.558 s)
std dev              7.988 ms   (3.172 ms .. 11.08 ms)
variance introduced by outliers: 19% (moderately inflated)

AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-19.lp solve solu /tmp/cbc1136744-20.sol (default strategy 1)
AccILPSolver: Continuous objective value is -65 - 0.01 seconds
AccILPSolver: Cgl0002I 103 variables fixed
AccILPSolver: Cgl0003I 38 fixed, 1315 tightened bounds, 305 strengthened rows, 24 substitutions
AccILPSolver: Cgl0003I 15 fixed, 901 tightened bounds, 69 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 2 fixed, 736 tightened bounds, 6 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 0 fixed, 560 tightened bounds, 41 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 285 tightened bounds, 111 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 53 tightened bounds, 56 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 38 tightened bounds, 44 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 2 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1254 rows, 710 columns (710 integer (208 of which binary)) and 3158 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 60 integer variables out of 710 objects (710 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 90 integers unsatisfied sum - 5.09163
AccILPSolver: Cbc0038I Pass   1: suminf.    2.61995 (97) obj. -64.8606 iterations 109
AccILPSolver: Cbc0038I Pass   2: suminf.    0.46526 (60) obj. -60.9719 iterations 24
AccILPSolver: Cbc0038I Pass   3: suminf.    0.13090 (40) obj. -59.9865 iterations 5
AccILPSolver: Cbc0038I Pass   4: suminf.    0.00802 (8) obj. -58 iterations 24
AccILPSolver: Cbc0038I Pass   5: suminf.    0.07559 (23) obj. -58 iterations 6
AccILPSolver: Cbc0038I Pass   6: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   8: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   9: suminf.    0.12226 (15) obj. -45.9653 iterations 101
AccILPSolver: Cbc0038I Pass  10: suminf.    0.15754 (28) obj. -45.9674 iterations 19
AccILPSolver: Cbc0038I Pass  11: suminf.    0.09241 (26) obj. -45 iterations 7
AccILPSolver: Cbc0038I Pass  12: suminf.    0.03209 (10) obj. -45 iterations 5
AccILPSolver: Cbc0038I Pass  13: suminf.    0.00599 (3) obj. -45 iterations 3
AccILPSolver: Cbc0038I Pass  14: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  16: suminf.    0.67643 (47) obj. -40 iterations 122
AccILPSolver: Cbc0038I Pass  17: suminf.    0.66523 (46) obj. -40 iterations 13
AccILPSolver: Cbc0038I Pass  18: suminf.    0.00401 (4) obj. -40 iterations 12
AccILPSolver: Cbc0038I Pass  19: suminf.    0.00198 (2) obj. -40 iterations 6
AccILPSolver: Cbc0038I Pass  20: suminf.    0.00198 (2) obj. -40 iterations 0
AccILPSolver: Cbc0038I Pass  21: suminf.    0.06978 (13) obj. -36 iterations 49
AccILPSolver: Cbc0038I Pass  22: suminf.    0.06978 (13) obj. -36 iterations 5
AccILPSolver: Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -36 iterations 10
AccILPSolver: Cbc0038I Solution found of -36
AccILPSolver: Cbc0038I Cleaned solution of -36
AccILPSolver: Cbc0038I Rounding solution of -43 is better than previous of -36
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous of which 15 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 923 rows 501 columns - 20 fixed gives 864, 464 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 836 rows 452 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -46.0999
AccILPSolver: Cbc0038I Pass  24: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  25: suminf.    0.76187 (72) obj. -62.9268 iterations 10
AccILPSolver: Cbc0038I Pass  26: suminf.    0.13090 (40) obj. -59.9865 iterations 16
AccILPSolver: Cbc0038I Pass  27: suminf.    0.00802 (8) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  28: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  29: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  30: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  31: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  32: suminf.   15.48197 (189) obj. -46.0999 iterations 143
AccILPSolver: Cbc0038I Pass  33: suminf.    0.54277 (41) obj. -46.0999 iterations 24
AccILPSolver: Cbc0038I Pass  34: suminf.    1.17053 (31) obj. -46.0999 iterations 21
AccILPSolver: Cbc0038I Pass  35: suminf.   21.21194 (231) obj. -46.0999 iterations 4
AccILPSolver: Cbc0038I Pass  36: suminf.    0.00599 (4) obj. -47 iterations 14
AccILPSolver: Cbc0038I Pass  37: suminf.    0.00406 (3) obj. -47 iterations 3
AccILPSolver: Cbc0038I Pass  38: suminf.    0.00199 (2) obj. -47 iterations 2
AccILPSolver: Cbc0038I Pass  39: suminf.    0.00199 (2) obj. -47 iterations 0
AccILPSolver: Cbc0038I Pass  40: suminf.    8.99389 (113) obj. -46.0999 iterations 121
AccILPSolver: Cbc0038I Pass  41: suminf.    8.99343 (113) obj. -46.0999 iterations 16
AccILPSolver: Cbc0038I Pass  42: suminf.    0.00000 (0) obj. -47 iterations 14
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous of which 12 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 928 rows 493 columns - 27 fixed gives 847, 447 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 819 rows 435 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -51.3999
AccILPSolver: Cbc0038I Pass  43: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  44: suminf.    1.00556 (80) obj. -62.9268 iterations 8
AccILPSolver: Cbc0038I Pass  45: suminf.    0.48514 (61) obj. -61.952 iterations 13
AccILPSolver: Cbc0038I Pass  46: suminf.    0.12153 (39) obj. -58.9958 iterations 12
AccILPSolver: Cbc0038I Pass  47: suminf.    0.00802 (8) obj. -58 iterations 21
AccILPSolver: Cbc0038I Pass  48: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  49: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  50: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  51: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  52: suminf.   56.16081 (163) obj. -51.3999 iterations 115
AccILPSolver: Cbc0038I Pass  53: suminf.    0.43686 (16) obj. -51.3999 iterations 20
AccILPSolver: Cbc0038I Pass  54: suminf.    0.03185 (11) obj. -52 iterations 12
AccILPSolver: Cbc0038I Pass  55: suminf.    0.03185 (11) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  56: suminf.    8.55887 (63) obj. -51.3999 iterations 99
AccILPSolver: Cbc0038I Pass  57: suminf.    4.83194 (51) obj. -51.3999 iterations 39
AccILPSolver: Cbc0038I Pass  58: suminf.    0.51691 (30) obj. -51.3999 iterations 14
AccILPSolver: Cbc0038I Pass  59: suminf.    0.13816 (34) obj. -51.9958 iterations 6
AccILPSolver: Cbc0038I Pass  60: suminf.   17.49201 (70) obj. -51.3999 iterations 10
AccILPSolver: Cbc0038I Pass  61: suminf.    0.00200 (2) obj. -52 iterations 21
AccILPSolver: Cbc0038I Pass  62: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  63: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  64: suminf.   22.93048 (63) obj. -51.3999 iterations 106
AccILPSolver: Cbc0038I Pass  65: suminf.   22.93048 (63) obj. -51.3999 iterations 30
AccILPSolver: Cbc0038I Pass  66: suminf.    1.16056 (4) obj. -51.3999 iterations 40
AccILPSolver: Cbc0038I Pass  67: suminf.    1.16056 (4) obj. -51.3999 iterations 0
AccILPSolver: Cbc0038I Pass  68: suminf.    0.00000 (0) obj. -52 iterations 10
AccILPSolver: Cbc0038I Solution found of -52
AccILPSolver: Cbc0038I Cleaned solution of -52
AccILPSolver: Cbc0038I Rounding solution of -53 is better than previous of -52
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 185 integers at bound fixed and 0 continuous of which 17 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 945 rows 504 columns - 17 fixed gives 886, 472 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 858 rows 458 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -57.2999
AccILPSolver: Cbc0038I Pass  69: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  70: suminf.    0.30627 (52) obj. -60.9719 iterations 25
AccILPSolver: Cbc0038I Pass  71: suminf.    0.04237 (30) obj. -58 iterations 11
AccILPSolver: Cbc0038I Pass  72: suminf.    0.00802 (8) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass  73: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  74: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  75: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  76: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  77: suminf.   45.24373 (174) obj. -57.2999 iterations 131
AccILPSolver: Cbc0038I Pass  78: suminf.   35.49310 (153) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  79: suminf.   27.86567 (120) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  80: suminf.   27.86567 (120) obj. -57.2999 iterations 0
AccILPSolver: Cbc0038I Pass  81: suminf.    0.08709 (27) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  82: suminf.    0.08709 (27) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  83: suminf.    0.04495 (15) obj. -58 iterations 8
AccILPSolver: Cbc0038I Pass  84: suminf.    0.04395 (14) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  85: suminf.    0.04395 (14) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  86: suminf.    0.88088 (31) obj. -57.2999 iterations 81
AccILPSolver: Cbc0038I Pass  87: suminf.    0.71094 (22) obj. -57.2999 iterations 18
AccILPSolver: Cbc0038I Pass  88: suminf.    0.31718 (16) obj. -57.9674 iterations 19
AccILPSolver: Cbc0038I Pass  89: suminf.    0.31718 (16) obj. -57.9674 iterations 2
AccILPSolver: Cbc0038I Pass  90: suminf.    3.00329 (14) obj. -57.2999 iterations 24
AccILPSolver: Cbc0038I Pass  91: suminf.    0.00399 (4) obj. -58 iterations 9
AccILPSolver: Cbc0038I Pass  92: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  93: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  94: suminf.   11.76728 (75) obj. -57.2999 iterations 92
AccILPSolver: Cbc0038I Pass  95: suminf.   12.03051 (75) obj. -57.2999 iterations 14
AccILPSolver: Cbc0038I Pass  96: suminf.    0.93845 (17) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  97: suminf.    0.93845 (17) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  98: suminf.    0.92277 (2) obj. -58 iterations 3
AccILPSolver: Cbc0038I Pass  99: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 100: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 101: suminf.   11.84153 (55) obj. -57.2999 iterations 73
AccILPSolver: Cbc0038I Pass 102: suminf.   11.86276 (63) obj. -57.2999 iterations 26
AccILPSolver: Cbc0038I Pass 103: suminf.    0.10003 (16) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass 104: suminf.    0.07503 (15) obj. -58 iterations 2
AccILPSolver: Cbc0038I Pass 105: suminf.    0.00000 (0) obj. -58 iterations 6
AccILPSolver: Cbc0038I Solution found of -58
AccILPSolver: Cbc0038I Cleaned solution of -58
AccILPSolver: Cbc0038I Rounding solution of -59 is better than previous of -58
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 251 integers at bound fixed and 0 continuous of which 23 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 814 rows 441 columns - 12 fixed gives 750, 406 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 726 rows 395 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -61.4999
AccILPSolver: Cbc0038I Pass 106: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass 107: suminf.    0.48514 (61) obj. -61.952 iterations 20
AccILPSolver: Cbc0038I Pass 108: suminf.    4.66742 (63) obj. -61.4999 iterations 18
AccILPSolver: Cbc0038I Pass 109: suminf.    0.93160 (63) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 110: suminf.    4.70799 (60) obj. -61.4999 iterations 30
AccILPSolver: Cbc0038I Pass 111: suminf.    0.97217 (60) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 112: suminf.    4.70799 (60) obj. -61.4999 iterations 21
AccILPSolver: Cbc0038I Pass 113: suminf.    4.33501 (50) obj. -61.4999 iterations 107
AccILPSolver: Cbc0038I Pass 114: suminf.    1.02062 (72) obj. -61.915 iterations 29
AccILPSolver: Cbc0038I Pass 115: suminf.    7.41824 (65) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 116: suminf.    1.27189 (68) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 117: suminf.    4.27800 (56) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 118: suminf.    0.74389 (61) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 119: suminf.    4.27800 (56) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 120: suminf.    3.30475 (83) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 121: suminf.    2.88533 (80) obj. -61.9257 iterations 25
AccILPSolver: Cbc0038I Pass 122: suminf.    6.52600 (68) obj. -61.4999 iterations 32
AccILPSolver: Cbc0038I Pass 123: suminf.    0.70253 (48) obj. -61.9642 iterations 30
AccILPSolver: Cbc0038I Pass 124: suminf.    5.59866 (44) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 125: suminf.    0.51239 (42) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 126: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 127: suminf.    0.51239 (42) obj. -61.9642 iterations 14
AccILPSolver: Cbc0038I Pass 128: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 129: suminf.    0.90202 (26) obj. -62.9642 iterations 18
AccILPSolver: Cbc0038I Pass 130: suminf.    0.04695 (14) obj. -62 iterations 5
AccILPSolver: Cbc0038I Pass 131: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 132: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 133: suminf.   38.37866 (117) obj. -61.4999 iterations 79
AccILPSolver: Cbc0038I Pass 134: suminf.    0.76837 (48) obj. -61.9655 iterations 32
AccILPSolver: Cbc0038I Pass 135: suminf.    2.14827 (55) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 136: suminf.    0.54669 (47) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 137: suminf.    6.11638 (47) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 138: suminf.    0.52092 (40) obj. -61.9642 iterations 16
AccILPSolver: Cbc0038I Pass 139: suminf.    6.09061 (40) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 140: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 141: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 142: suminf.    0.52092 (40) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 143: suminf.    6.09061 (40) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 144: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 145: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 146: suminf.    0.47542 (25) obj. -61.9642 iterations 21
AccILPSolver: Cbc0038I Pass 147: suminf.    6.04511 (25) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 148: suminf.    0.47542 (25) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 149: suminf.    1.29359 (46) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 150: suminf.    0.82116 (44) obj. -61.9643 iterations 21
AccILPSolver: Cbc0038I Pass 151: suminf.   85.43206 (206) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 152: suminf.    0.11042 (34) obj. -61.9958 iterations 9
AccILPSolver: Cbc0038I Pass 153: suminf.    1.05081 (17) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 154: suminf.    0.05926 (17) obj. -61.9958 iterations 8
AccILPSolver: Cbc0038I Pass 155: suminf.    1.05081 (17) obj. -61.4999 iterations 9
AccILPSolver: Cbc0038I Pass 156: suminf.    2.17794 (47) obj. -61.4999 iterations 86
AccILPSolver: Cbc0038I Pass 157: suminf.    0.93100 (43) obj. -61.9202 iterations 29
AccILPSolver: Cbc0038I Pass 158: suminf.    1.07933 (28) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 159: suminf.    0.22001 (28) obj. -61.9296 iterations 18
AccILPSolver: Cbc0038I Pass 160: suminf.    1.05511 (25) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 161: suminf.    0.19579 (25) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 162: suminf.    1.05208 (22) obj. -61.4999 iterations 19
AccILPSolver: Cbc0038I Pass 163: suminf.    0.19276 (22) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 164: suminf.   95.93635 (260) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 165: suminf.   24.32538 (260) obj. -61.9444 iterations 15
AccILPSolver: Cbc0038I Pass 166: suminf.    1.09254 (45) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 167: suminf.    0.62701 (45) obj. -61.9655 iterations 9
AccILPSolver: Cbc0038I Pass 168: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 169: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 170: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 171: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 172: suminf.  113.01572 (282) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 173: suminf.    0.88832 (52) obj. -61.9247 iterations 24
AccILPSolver: Cbc0038I Pass 174: suminf.    0.88832 (52) obj. -61.9247 iterations 0
AccILPSolver: Cbc0038I Pass 175: suminf.    5.38397 (57) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 176: suminf.    0.72096 (44) obj. -61.9456 iterations 10
AccILPSolver: Cbc0038I Pass 177: suminf.    0.72096 (44) obj. -61.9456 iterations 0
AccILPSolver: Cbc0038I Pass 178: suminf.    9.12061 (44) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 179: suminf.    1.98893 (60) obj. -61.4999 iterations 66
AccILPSolver: Cbc0038I Pass 180: suminf.    0.74544 (50) obj. -61.9456 iterations 29
AccILPSolver: Cbc0038I Pass 181: suminf.    1.73499 (50) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 182: suminf.    0.95453 (47) obj. -61.9603 iterations 11
AccILPSolver: Cbc0038I Pass 183: suminf.    9.25443 (49) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 184: suminf.    0.57506 (39) obj. -61.9696 iterations 14
AccILPSolver: Cbc0038I Pass 185: suminf.    0.57506 (39) obj. -61.9696 iterations 0
AccILPSolver: Cbc0038I Pass 186: suminf.    9.02603 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 187: suminf.    0.57506 (39) obj. -61.9696 iterations 9
AccILPSolver: Cbc0038I Pass 188: suminf.   83.78426 (237) obj. -61.4999 iterations 77
AccILPSolver: Cbc0038I Pass 189: suminf.    0.93026 (45) obj. -61.9151 iterations 34
AccILPSolver: Cbc0038I Pass 190: suminf.   75.16068 (188) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 191: suminf.    0.35829 (36) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 192: suminf.    1.23764 (34) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 193: suminf.    0.34007 (34) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 194: suminf.    1.16340 (16) obj. -61.4999 iterations 23
AccILPSolver: Cbc0038I Pass 195: suminf.    0.26385 (15) obj. -61.9487 iterations 15
AccILPSolver: Cbc0038I Pass 196: suminf.    1.15937 (14) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 197: suminf.    0.26180 (14) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 198: suminf.    1.26318 (30) obj. -61.4999 iterations 64
AccILPSolver: Cbc0038I Pass 199: suminf.    0.63017 (30) obj. -61.9141 iterations 17
AccILPSolver: Cbc0038I Pass 200: suminf.    1.18533 (20) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 201: suminf.    0.28776 (20) obj. -61.9487 iterations 13
AccILPSolver: Cbc0038I Pass 202: suminf.    1.18332 (19) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 203: suminf.    0.28575 (19) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 204: suminf.    1.91468 (66) obj. -61.4999 iterations 84
AccILPSolver: Cbc0038I Pass 205: suminf.    4.90122 (55) obj. -61.4999 iterations 101
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 140 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 1062 rows 563 columns - 13 fixed gives 1025, 539 - still too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.54 seconds)
AccILPSolver: Cbc0038I After 0.54 seconds - Feasibility pump exiting with objective of -59 - took 0.38 seconds
AccILPSolver: Cbc0012I Integer solution of -59 found by feasibility pump after 0 iterations and 0 nodes (0.54 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 580 rows 306 columns
AccILPSolver: Cbc0031I 81 added rows had average density of 9.7654321
AccILPSolver: Cbc0013I At root node, 81 cuts changed objective from -65 to -65 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 157 row cuts average 2.3 elements, 0 column cuts (40 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 456 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 14 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 463 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 7 (ZeroHalf) - 32 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -59 best solution, best possible -65 (0.76 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 699 rows 360 columns - 4 fixed gives 684, 352 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 645 rows 339 columns - too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 690 rows 356 columns - 4 fixed gives 675, 348 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 643 rows 336 columns - too large
AccILPSolver: Cbc0016I Integer solution of -64 found by strong branching after 1724 iterations and 93 nodes (1.25 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 226 rows 116 columns
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 237 rows 122 columns
AccILPSolver: Cbc0012I Integer solution of -65 found by rounding after 5322 iterations and 374 nodes (1.60 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -65, took 5322 iterations and 374 nodes (1.60 seconds)
AccILPSolver: Cbc0032I Strong branching done 1564 times (6193 iterations), fathomed 1 nodes and fixed 8 variables
AccILPSolver: Cbc0035I Maximum depth 44, 58 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -65 to -65
AccILPSolver: Probing was tried 10 times and created 157 cuts of which 40 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: Gomory was tried 10 times and created 456 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
AccILPSolver: Knapsack was tried 10 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: FlowCover was tried 10 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 463 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
AccILPSolver: ZeroHalf was tried 10 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -65.00000000
AccILPSolver: Enumerated nodes:               374
AccILPSolver: Total iterations:               5322
AccILPSolver: Time (CPU seconds):             1.62
AccILPSolver: Time (Wallclock seconds):       1.65
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       1.65   (Wallclock seconds):       1.69
AccILPSolver: 
benchmarking CPU/n=256, iter=16
time                 2.972 s    (2.811 s .. 3.209 s)
                     0.999 R²   (0.998 R² .. 1.000 R²)
mean                 3.113 s    (3.038 s .. 3.232 s)
std dev              112.7 ms   (10.61 ms .. 142.6 ms)
variance introduced by outliers: 19% (moderately inflated)

AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-21.lp solve solu /tmp/cbc1136744-22.sol (default strategy 1)
AccILPSolver: Continuous objective value is -65 - 0.02 seconds
AccILPSolver: Cgl0002I 103 variables fixed
AccILPSolver: Cgl0003I 38 fixed, 1315 tightened bounds, 305 strengthened rows, 24 substitutions
AccILPSolver: Cgl0003I 15 fixed, 901 tightened bounds, 69 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 2 fixed, 736 tightened bounds, 6 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 0 fixed, 560 tightened bounds, 41 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 285 tightened bounds, 111 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 53 tightened bounds, 56 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 38 tightened bounds, 44 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 2 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1254 rows, 710 columns (710 integer (208 of which binary)) and 3158 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 60 integer variables out of 710 objects (710 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 90 integers unsatisfied sum - 5.09163
AccILPSolver: Cbc0038I Pass   1: suminf.    2.61995 (97) obj. -64.8606 iterations 109
AccILPSolver: Cbc0038I Pass   2: suminf.    0.46526 (60) obj. -60.9719 iterations 24
AccILPSolver: Cbc0038I Pass   3: suminf.    0.13090 (40) obj. -59.9865 iterations 5
AccILPSolver: Cbc0038I Pass   4: suminf.    0.00802 (8) obj. -58 iterations 24
AccILPSolver: Cbc0038I Pass   5: suminf.    0.07559 (23) obj. -58 iterations 6
AccILPSolver: Cbc0038I Pass   6: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   8: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   9: suminf.    0.12226 (15) obj. -45.9653 iterations 101
AccILPSolver: Cbc0038I Pass  10: suminf.    0.15754 (28) obj. -45.9674 iterations 19
AccILPSolver: Cbc0038I Pass  11: suminf.    0.09241 (26) obj. -45 iterations 7
AccILPSolver: Cbc0038I Pass  12: suminf.    0.03209 (10) obj. -45 iterations 5
AccILPSolver: Cbc0038I Pass  13: suminf.    0.00599 (3) obj. -45 iterations 3
AccILPSolver: Cbc0038I Pass  14: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  16: suminf.    0.67643 (47) obj. -40 iterations 122
AccILPSolver: Cbc0038I Pass  17: suminf.    0.66523 (46) obj. -40 iterations 13
AccILPSolver: Cbc0038I Pass  18: suminf.    0.00401 (4) obj. -40 iterations 12
AccILPSolver: Cbc0038I Pass  19: suminf.    0.00198 (2) obj. -40 iterations 6
AccILPSolver: Cbc0038I Pass  20: suminf.    0.00198 (2) obj. -40 iterations 0
AccILPSolver: Cbc0038I Pass  21: suminf.    0.06978 (13) obj. -36 iterations 49
AccILPSolver: Cbc0038I Pass  22: suminf.    0.06978 (13) obj. -36 iterations 5
AccILPSolver: Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -36 iterations 10
AccILPSolver: Cbc0038I Solution found of -36
AccILPSolver: Cbc0038I Cleaned solution of -36
AccILPSolver: Cbc0038I Rounding solution of -43 is better than previous of -36
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous of which 15 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 923 rows 501 columns - 20 fixed gives 864, 464 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 836 rows 452 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -46.0999
AccILPSolver: Cbc0038I Pass  24: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  25: suminf.    0.76187 (72) obj. -62.9268 iterations 10
AccILPSolver: Cbc0038I Pass  26: suminf.    0.13090 (40) obj. -59.9865 iterations 16
AccILPSolver: Cbc0038I Pass  27: suminf.    0.00802 (8) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  28: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  29: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  30: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  31: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  32: suminf.   15.48197 (189) obj. -46.0999 iterations 143
AccILPSolver: Cbc0038I Pass  33: suminf.    0.54277 (41) obj. -46.0999 iterations 24
AccILPSolver: Cbc0038I Pass  34: suminf.    1.17053 (31) obj. -46.0999 iterations 21
AccILPSolver: Cbc0038I Pass  35: suminf.   21.21194 (231) obj. -46.0999 iterations 4
AccILPSolver: Cbc0038I Pass  36: suminf.    0.00599 (4) obj. -47 iterations 14
AccILPSolver: Cbc0038I Pass  37: suminf.    0.00406 (3) obj. -47 iterations 3
AccILPSolver: Cbc0038I Pass  38: suminf.    0.00199 (2) obj. -47 iterations 2
AccILPSolver: Cbc0038I Pass  39: suminf.    0.00199 (2) obj. -47 iterations 0
AccILPSolver: Cbc0038I Pass  40: suminf.    8.99389 (113) obj. -46.0999 iterations 121
AccILPSolver: Cbc0038I Pass  41: suminf.    8.99343 (113) obj. -46.0999 iterations 16
AccILPSolver: Cbc0038I Pass  42: suminf.    0.00000 (0) obj. -47 iterations 14
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous of which 12 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 928 rows 493 columns - 27 fixed gives 847, 447 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 819 rows 435 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -51.3999
AccILPSolver: Cbc0038I Pass  43: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  44: suminf.    1.00556 (80) obj. -62.9268 iterations 8
AccILPSolver: Cbc0038I Pass  45: suminf.    0.48514 (61) obj. -61.952 iterations 13
AccILPSolver: Cbc0038I Pass  46: suminf.    0.12153 (39) obj. -58.9958 iterations 12
AccILPSolver: Cbc0038I Pass  47: suminf.    0.00802 (8) obj. -58 iterations 21
AccILPSolver: Cbc0038I Pass  48: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  49: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  50: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  51: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  52: suminf.   56.16081 (163) obj. -51.3999 iterations 115
AccILPSolver: Cbc0038I Pass  53: suminf.    0.43686 (16) obj. -51.3999 iterations 20
AccILPSolver: Cbc0038I Pass  54: suminf.    0.03185 (11) obj. -52 iterations 12
AccILPSolver: Cbc0038I Pass  55: suminf.    0.03185 (11) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  56: suminf.    8.55887 (63) obj. -51.3999 iterations 99
AccILPSolver: Cbc0038I Pass  57: suminf.    4.83194 (51) obj. -51.3999 iterations 39
AccILPSolver: Cbc0038I Pass  58: suminf.    0.51691 (30) obj. -51.3999 iterations 14
AccILPSolver: Cbc0038I Pass  59: suminf.    0.13816 (34) obj. -51.9958 iterations 6
AccILPSolver: Cbc0038I Pass  60: suminf.   17.49201 (70) obj. -51.3999 iterations 10
AccILPSolver: Cbc0038I Pass  61: suminf.    0.00200 (2) obj. -52 iterations 21
AccILPSolver: Cbc0038I Pass  62: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  63: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  64: suminf.   22.93048 (63) obj. -51.3999 iterations 106
AccILPSolver: Cbc0038I Pass  65: suminf.   22.93048 (63) obj. -51.3999 iterations 30
AccILPSolver: Cbc0038I Pass  66: suminf.    1.16056 (4) obj. -51.3999 iterations 40
AccILPSolver: Cbc0038I Pass  67: suminf.    1.16056 (4) obj. -51.3999 iterations 0
AccILPSolver: Cbc0038I Pass  68: suminf.    0.00000 (0) obj. -52 iterations 10
AccILPSolver: Cbc0038I Solution found of -52
AccILPSolver: Cbc0038I Cleaned solution of -52
AccILPSolver: Cbc0038I Rounding solution of -53 is better than previous of -52
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 185 integers at bound fixed and 0 continuous of which 17 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 945 rows 504 columns - 17 fixed gives 886, 472 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 858 rows 458 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -57.2999
AccILPSolver: Cbc0038I Pass  69: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  70: suminf.    0.30627 (52) obj. -60.9719 iterations 25
AccILPSolver: Cbc0038I Pass  71: suminf.    0.04237 (30) obj. -58 iterations 11
AccILPSolver: Cbc0038I Pass  72: suminf.    0.00802 (8) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass  73: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  74: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  75: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  76: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  77: suminf.   45.24373 (174) obj. -57.2999 iterations 131
AccILPSolver: Cbc0038I Pass  78: suminf.   35.49310 (153) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  79: suminf.   27.86567 (120) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  80: suminf.   27.86567 (120) obj. -57.2999 iterations 0
AccILPSolver: Cbc0038I Pass  81: suminf.    0.08709 (27) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  82: suminf.    0.08709 (27) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  83: suminf.    0.04495 (15) obj. -58 iterations 8
AccILPSolver: Cbc0038I Pass  84: suminf.    0.04395 (14) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  85: suminf.    0.04395 (14) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  86: suminf.    0.88088 (31) obj. -57.2999 iterations 81
AccILPSolver: Cbc0038I Pass  87: suminf.    0.71094 (22) obj. -57.2999 iterations 18
AccILPSolver: Cbc0038I Pass  88: suminf.    0.31718 (16) obj. -57.9674 iterations 19
AccILPSolver: Cbc0038I Pass  89: suminf.    0.31718 (16) obj. -57.9674 iterations 2
AccILPSolver: Cbc0038I Pass  90: suminf.    3.00329 (14) obj. -57.2999 iterations 24
AccILPSolver: Cbc0038I Pass  91: suminf.    0.00399 (4) obj. -58 iterations 9
AccILPSolver: Cbc0038I Pass  92: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  93: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  94: suminf.   11.76728 (75) obj. -57.2999 iterations 92
AccILPSolver: Cbc0038I Pass  95: suminf.   12.03051 (75) obj. -57.2999 iterations 14
AccILPSolver: Cbc0038I Pass  96: suminf.    0.93845 (17) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  97: suminf.    0.93845 (17) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  98: suminf.    0.92277 (2) obj. -58 iterations 3
AccILPSolver: Cbc0038I Pass  99: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 100: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 101: suminf.   11.84153 (55) obj. -57.2999 iterations 73
AccILPSolver: Cbc0038I Pass 102: suminf.   11.86276 (63) obj. -57.2999 iterations 26
AccILPSolver: Cbc0038I Pass 103: suminf.    0.10003 (16) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass 104: suminf.    0.07503 (15) obj. -58 iterations 2
AccILPSolver: Cbc0038I Pass 105: suminf.    0.00000 (0) obj. -58 iterations 6
AccILPSolver: Cbc0038I Solution found of -58
AccILPSolver: Cbc0038I Cleaned solution of -58
AccILPSolver: Cbc0038I Rounding solution of -59 is better than previous of -58
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 251 integers at bound fixed and 0 continuous of which 23 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 814 rows 441 columns - 12 fixed gives 750, 406 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 726 rows 395 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -61.4999
AccILPSolver: Cbc0038I Pass 106: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass 107: suminf.    0.48514 (61) obj. -61.952 iterations 20
AccILPSolver: Cbc0038I Pass 108: suminf.    4.66742 (63) obj. -61.4999 iterations 18
AccILPSolver: Cbc0038I Pass 109: suminf.    0.93160 (63) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 110: suminf.    4.70799 (60) obj. -61.4999 iterations 30
AccILPSolver: Cbc0038I Pass 111: suminf.    0.97217 (60) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 112: suminf.    4.70799 (60) obj. -61.4999 iterations 21
AccILPSolver: Cbc0038I Pass 113: suminf.    4.33501 (50) obj. -61.4999 iterations 107
AccILPSolver: Cbc0038I Pass 114: suminf.    1.02062 (72) obj. -61.915 iterations 29
AccILPSolver: Cbc0038I Pass 115: suminf.    7.41824 (65) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 116: suminf.    1.27189 (68) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 117: suminf.    4.27800 (56) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 118: suminf.    0.74389 (61) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 119: suminf.    4.27800 (56) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 120: suminf.    3.30475 (83) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 121: suminf.    2.88533 (80) obj. -61.9257 iterations 25
AccILPSolver: Cbc0038I Pass 122: suminf.    6.52600 (68) obj. -61.4999 iterations 32
AccILPSolver: Cbc0038I Pass 123: suminf.    0.70253 (48) obj. -61.9642 iterations 30
AccILPSolver: Cbc0038I Pass 124: suminf.    5.59866 (44) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 125: suminf.    0.51239 (42) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 126: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 127: suminf.    0.51239 (42) obj. -61.9642 iterations 14
AccILPSolver: Cbc0038I Pass 128: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 129: suminf.    0.90202 (26) obj. -62.9642 iterations 18
AccILPSolver: Cbc0038I Pass 130: suminf.    0.04695 (14) obj. -62 iterations 5
AccILPSolver: Cbc0038I Pass 131: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 132: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 133: suminf.   38.37866 (117) obj. -61.4999 iterations 79
AccILPSolver: Cbc0038I Pass 134: suminf.    0.76837 (48) obj. -61.9655 iterations 32
AccILPSolver: Cbc0038I Pass 135: suminf.    2.14827 (55) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 136: suminf.    0.54669 (47) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 137: suminf.    6.11638 (47) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 138: suminf.    0.52092 (40) obj. -61.9642 iterations 16
AccILPSolver: Cbc0038I Pass 139: suminf.    6.09061 (40) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 140: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 141: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 142: suminf.    0.52092 (40) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 143: suminf.    6.09061 (40) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 144: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 145: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 146: suminf.    0.47542 (25) obj. -61.9642 iterations 21
AccILPSolver: Cbc0038I Pass 147: suminf.    6.04511 (25) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 148: suminf.    0.47542 (25) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 149: suminf.    1.29359 (46) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 150: suminf.    0.82116 (44) obj. -61.9643 iterations 21
AccILPSolver: Cbc0038I Pass 151: suminf.   85.43206 (206) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 152: suminf.    0.11042 (34) obj. -61.9958 iterations 9
AccILPSolver: Cbc0038I Pass 153: suminf.    1.05081 (17) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 154: suminf.    0.05926 (17) obj. -61.9958 iterations 8
AccILPSolver: Cbc0038I Pass 155: suminf.    1.05081 (17) obj. -61.4999 iterations 9
AccILPSolver: Cbc0038I Pass 156: suminf.    2.17794 (47) obj. -61.4999 iterations 86
AccILPSolver: Cbc0038I Pass 157: suminf.    0.93100 (43) obj. -61.9202 iterations 29
AccILPSolver: Cbc0038I Pass 158: suminf.    1.07933 (28) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 159: suminf.    0.22001 (28) obj. -61.9296 iterations 18
AccILPSolver: Cbc0038I Pass 160: suminf.    1.05511 (25) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 161: suminf.    0.19579 (25) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 162: suminf.    1.05208 (22) obj. -61.4999 iterations 19
AccILPSolver: Cbc0038I Pass 163: suminf.    0.19276 (22) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 164: suminf.   95.93635 (260) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 165: suminf.   24.32538 (260) obj. -61.9444 iterations 15
AccILPSolver: Cbc0038I Pass 166: suminf.    1.09254 (45) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 167: suminf.    0.62701 (45) obj. -61.9655 iterations 9
AccILPSolver: Cbc0038I Pass 168: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 169: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 170: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 171: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 172: suminf.  113.01572 (282) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 173: suminf.    0.88832 (52) obj. -61.9247 iterations 24
AccILPSolver: Cbc0038I Pass 174: suminf.    0.88832 (52) obj. -61.9247 iterations 0
AccILPSolver: Cbc0038I Pass 175: suminf.    5.38397 (57) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 176: suminf.    0.72096 (44) obj. -61.9456 iterations 10
AccILPSolver: Cbc0038I Pass 177: suminf.    0.72096 (44) obj. -61.9456 iterations 0
AccILPSolver: Cbc0038I Pass 178: suminf.    9.12061 (44) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 179: suminf.    1.98893 (60) obj. -61.4999 iterations 66
AccILPSolver: Cbc0038I Pass 180: suminf.    0.74544 (50) obj. -61.9456 iterations 29
AccILPSolver: Cbc0038I Pass 181: suminf.    1.73499 (50) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 182: suminf.    0.95453 (47) obj. -61.9603 iterations 11
AccILPSolver: Cbc0038I Pass 183: suminf.    9.25443 (49) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 184: suminf.    0.57506 (39) obj. -61.9696 iterations 14
AccILPSolver: Cbc0038I Pass 185: suminf.    0.57506 (39) obj. -61.9696 iterations 0
AccILPSolver: Cbc0038I Pass 186: suminf.    9.02603 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 187: suminf.    0.57506 (39) obj. -61.9696 iterations 9
AccILPSolver: Cbc0038I Pass 188: suminf.   83.78426 (237) obj. -61.4999 iterations 77
AccILPSolver: Cbc0038I Pass 189: suminf.    0.93026 (45) obj. -61.9151 iterations 34
AccILPSolver: Cbc0038I Pass 190: suminf.   75.16068 (188) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 191: suminf.    0.35829 (36) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 192: suminf.    1.23764 (34) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 193: suminf.    0.34007 (34) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 194: suminf.    1.16340 (16) obj. -61.4999 iterations 23
AccILPSolver: Cbc0038I Pass 195: suminf.    0.26385 (15) obj. -61.9487 iterations 15
AccILPSolver: Cbc0038I Pass 196: suminf.    1.15937 (14) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 197: suminf.    0.26180 (14) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 198: suminf.    1.26318 (30) obj. -61.4999 iterations 64
AccILPSolver: Cbc0038I Pass 199: suminf.    0.63017 (30) obj. -61.9141 iterations 17
AccILPSolver: Cbc0038I Pass 200: suminf.    1.18533 (20) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 201: suminf.    0.28776 (20) obj. -61.9487 iterations 13
AccILPSolver: Cbc0038I Pass 202: suminf.    1.18332 (19) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 203: suminf.    0.28575 (19) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 204: suminf.    1.91468 (66) obj. -61.4999 iterations 84
AccILPSolver: Cbc0038I Pass 205: suminf.    4.90122 (55) obj. -61.4999 iterations 101
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 140 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 1062 rows 563 columns - 13 fixed gives 1025, 539 - still too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.54 seconds)
AccILPSolver: Cbc0038I After 0.54 seconds - Feasibility pump exiting with objective of -59 - took 0.38 seconds
AccILPSolver: Cbc0012I Integer solution of -59 found by feasibility pump after 0 iterations and 0 nodes (0.54 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 580 rows 306 columns
AccILPSolver: Cbc0031I 81 added rows had average density of 9.7654321
AccILPSolver: Cbc0013I At root node, 81 cuts changed objective from -65 to -65 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 157 row cuts average 2.3 elements, 0 column cuts (40 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 456 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 14 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 463 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 7 (ZeroHalf) - 32 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -59 best solution, best possible -65 (0.75 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 699 rows 360 columns - 4 fixed gives 684, 352 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 645 rows 339 columns - too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 690 rows 356 columns - 4 fixed gives 675, 348 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 643 rows 336 columns - too large
AccILPSolver: Cbc0016I Integer solution of -64 found by strong branching after 1724 iterations and 93 nodes (1.25 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 226 rows 116 columns
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 237 rows 122 columns
AccILPSolver: Cbc0012I Integer solution of -65 found by rounding after 5322 iterations and 374 nodes (1.60 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -65, took 5322 iterations and 374 nodes (1.60 seconds)
AccILPSolver: Cbc0032I Strong branching done 1564 times (6193 iterations), fathomed 1 nodes and fixed 8 variables
AccILPSolver: Cbc0035I Maximum depth 44, 58 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -65 to -65
AccILPSolver: Probing was tried 10 times and created 157 cuts of which 40 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: Gomory was tried 10 times and created 456 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
AccILPSolver: Knapsack was tried 10 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: FlowCover was tried 10 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 463 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
AccILPSolver: ZeroHalf was tried 10 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -65.00000000
AccILPSolver: Enumerated nodes:               374
AccILPSolver: Total iterations:               5322
AccILPSolver: Time (CPU seconds):             1.62
AccILPSolver: Time (Wallclock seconds):       1.66
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       1.65   (Wallclock seconds):       1.69
AccILPSolver: 
benchmarking CPU/n=256, iter=32
time                 6.100 s    (5.829 s .. 6.404 s)
                     1.000 R²   (0.999 R² .. 1.000 R²)
mean                 6.144 s    (6.061 s .. 6.210 s)
std dev              89.98 ms   (40.89 ms .. 123.6 ms)
variance introduced by outliers: 19% (moderately inflated)

AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-23.lp solve solu /tmp/cbc1136744-24.sol (default strategy 1)
AccILPSolver: Continuous objective value is -65 - 0.01 seconds
AccILPSolver: Cgl0002I 103 variables fixed
AccILPSolver: Cgl0003I 38 fixed, 1315 tightened bounds, 305 strengthened rows, 24 substitutions
AccILPSolver: Cgl0003I 15 fixed, 901 tightened bounds, 69 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 2 fixed, 736 tightened bounds, 6 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 0 fixed, 560 tightened bounds, 41 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 285 tightened bounds, 111 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 53 tightened bounds, 56 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 38 tightened bounds, 44 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 2 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1254 rows, 710 columns (710 integer (208 of which binary)) and 3158 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 60 integer variables out of 710 objects (710 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 90 integers unsatisfied sum - 5.09163
AccILPSolver: Cbc0038I Pass   1: suminf.    2.61995 (97) obj. -64.8606 iterations 109
AccILPSolver: Cbc0038I Pass   2: suminf.    0.46526 (60) obj. -60.9719 iterations 24
AccILPSolver: Cbc0038I Pass   3: suminf.    0.13090 (40) obj. -59.9865 iterations 5
AccILPSolver: Cbc0038I Pass   4: suminf.    0.00802 (8) obj. -58 iterations 24
AccILPSolver: Cbc0038I Pass   5: suminf.    0.07559 (23) obj. -58 iterations 6
AccILPSolver: Cbc0038I Pass   6: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   8: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   9: suminf.    0.12226 (15) obj. -45.9653 iterations 101
AccILPSolver: Cbc0038I Pass  10: suminf.    0.15754 (28) obj. -45.9674 iterations 19
AccILPSolver: Cbc0038I Pass  11: suminf.    0.09241 (26) obj. -45 iterations 7
AccILPSolver: Cbc0038I Pass  12: suminf.    0.03209 (10) obj. -45 iterations 5
AccILPSolver: Cbc0038I Pass  13: suminf.    0.00599 (3) obj. -45 iterations 3
AccILPSolver: Cbc0038I Pass  14: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  16: suminf.    0.67643 (47) obj. -40 iterations 122
AccILPSolver: Cbc0038I Pass  17: suminf.    0.66523 (46) obj. -40 iterations 13
AccILPSolver: Cbc0038I Pass  18: suminf.    0.00401 (4) obj. -40 iterations 12
AccILPSolver: Cbc0038I Pass  19: suminf.    0.00198 (2) obj. -40 iterations 6
AccILPSolver: Cbc0038I Pass  20: suminf.    0.00198 (2) obj. -40 iterations 0
AccILPSolver: Cbc0038I Pass  21: suminf.    0.06978 (13) obj. -36 iterations 49
AccILPSolver: Cbc0038I Pass  22: suminf.    0.06978 (13) obj. -36 iterations 5
AccILPSolver: Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -36 iterations 10
AccILPSolver: Cbc0038I Solution found of -36
AccILPSolver: Cbc0038I Cleaned solution of -36
AccILPSolver: Cbc0038I Rounding solution of -43 is better than previous of -36
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous of which 15 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 923 rows 501 columns - 20 fixed gives 864, 464 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 836 rows 452 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -46.0999
AccILPSolver: Cbc0038I Pass  24: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  25: suminf.    0.76187 (72) obj. -62.9268 iterations 10
AccILPSolver: Cbc0038I Pass  26: suminf.    0.13090 (40) obj. -59.9865 iterations 16
AccILPSolver: Cbc0038I Pass  27: suminf.    0.00802 (8) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  28: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  29: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  30: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  31: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  32: suminf.   15.48197 (189) obj. -46.0999 iterations 143
AccILPSolver: Cbc0038I Pass  33: suminf.    0.54277 (41) obj. -46.0999 iterations 24
AccILPSolver: Cbc0038I Pass  34: suminf.    1.17053 (31) obj. -46.0999 iterations 21
AccILPSolver: Cbc0038I Pass  35: suminf.   21.21194 (231) obj. -46.0999 iterations 4
AccILPSolver: Cbc0038I Pass  36: suminf.    0.00599 (4) obj. -47 iterations 14
AccILPSolver: Cbc0038I Pass  37: suminf.    0.00406 (3) obj. -47 iterations 3
AccILPSolver: Cbc0038I Pass  38: suminf.    0.00199 (2) obj. -47 iterations 2
AccILPSolver: Cbc0038I Pass  39: suminf.    0.00199 (2) obj. -47 iterations 0
AccILPSolver: Cbc0038I Pass  40: suminf.    8.99389 (113) obj. -46.0999 iterations 121
AccILPSolver: Cbc0038I Pass  41: suminf.    8.99343 (113) obj. -46.0999 iterations 16
AccILPSolver: Cbc0038I Pass  42: suminf.    0.00000 (0) obj. -47 iterations 14
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous of which 12 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 928 rows 493 columns - 27 fixed gives 847, 447 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 819 rows 435 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -51.3999
AccILPSolver: Cbc0038I Pass  43: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  44: suminf.    1.00556 (80) obj. -62.9268 iterations 8
AccILPSolver: Cbc0038I Pass  45: suminf.    0.48514 (61) obj. -61.952 iterations 13
AccILPSolver: Cbc0038I Pass  46: suminf.    0.12153 (39) obj. -58.9958 iterations 12
AccILPSolver: Cbc0038I Pass  47: suminf.    0.00802 (8) obj. -58 iterations 21
AccILPSolver: Cbc0038I Pass  48: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  49: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  50: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  51: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  52: suminf.   56.16081 (163) obj. -51.3999 iterations 115
AccILPSolver: Cbc0038I Pass  53: suminf.    0.43686 (16) obj. -51.3999 iterations 20
AccILPSolver: Cbc0038I Pass  54: suminf.    0.03185 (11) obj. -52 iterations 12
AccILPSolver: Cbc0038I Pass  55: suminf.    0.03185 (11) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  56: suminf.    8.55887 (63) obj. -51.3999 iterations 99
AccILPSolver: Cbc0038I Pass  57: suminf.    4.83194 (51) obj. -51.3999 iterations 39
AccILPSolver: Cbc0038I Pass  58: suminf.    0.51691 (30) obj. -51.3999 iterations 14
AccILPSolver: Cbc0038I Pass  59: suminf.    0.13816 (34) obj. -51.9958 iterations 6
AccILPSolver: Cbc0038I Pass  60: suminf.   17.49201 (70) obj. -51.3999 iterations 10
AccILPSolver: Cbc0038I Pass  61: suminf.    0.00200 (2) obj. -52 iterations 21
AccILPSolver: Cbc0038I Pass  62: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  63: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  64: suminf.   22.93048 (63) obj. -51.3999 iterations 106
AccILPSolver: Cbc0038I Pass  65: suminf.   22.93048 (63) obj. -51.3999 iterations 30
AccILPSolver: Cbc0038I Pass  66: suminf.    1.16056 (4) obj. -51.3999 iterations 40
AccILPSolver: Cbc0038I Pass  67: suminf.    1.16056 (4) obj. -51.3999 iterations 0
AccILPSolver: Cbc0038I Pass  68: suminf.    0.00000 (0) obj. -52 iterations 10
AccILPSolver: Cbc0038I Solution found of -52
AccILPSolver: Cbc0038I Cleaned solution of -52
AccILPSolver: Cbc0038I Rounding solution of -53 is better than previous of -52
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 185 integers at bound fixed and 0 continuous of which 17 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 945 rows 504 columns - 17 fixed gives 886, 472 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 858 rows 458 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.30 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -57.2999
AccILPSolver: Cbc0038I Pass  69: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  70: suminf.    0.30627 (52) obj. -60.9719 iterations 25
AccILPSolver: Cbc0038I Pass  71: suminf.    0.04237 (30) obj. -58 iterations 11
AccILPSolver: Cbc0038I Pass  72: suminf.    0.00802 (8) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass  73: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  74: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  75: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  76: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  77: suminf.   45.24373 (174) obj. -57.2999 iterations 131
AccILPSolver: Cbc0038I Pass  78: suminf.   35.49310 (153) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  79: suminf.   27.86567 (120) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  80: suminf.   27.86567 (120) obj. -57.2999 iterations 0
AccILPSolver: Cbc0038I Pass  81: suminf.    0.08709 (27) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  82: suminf.    0.08709 (27) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  83: suminf.    0.04495 (15) obj. -58 iterations 8
AccILPSolver: Cbc0038I Pass  84: suminf.    0.04395 (14) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  85: suminf.    0.04395 (14) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  86: suminf.    0.88088 (31) obj. -57.2999 iterations 81
AccILPSolver: Cbc0038I Pass  87: suminf.    0.71094 (22) obj. -57.2999 iterations 18
AccILPSolver: Cbc0038I Pass  88: suminf.    0.31718 (16) obj. -57.9674 iterations 19
AccILPSolver: Cbc0038I Pass  89: suminf.    0.31718 (16) obj. -57.9674 iterations 2
AccILPSolver: Cbc0038I Pass  90: suminf.    3.00329 (14) obj. -57.2999 iterations 24
AccILPSolver: Cbc0038I Pass  91: suminf.    0.00399 (4) obj. -58 iterations 9
AccILPSolver: Cbc0038I Pass  92: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  93: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  94: suminf.   11.76728 (75) obj. -57.2999 iterations 92
AccILPSolver: Cbc0038I Pass  95: suminf.   12.03051 (75) obj. -57.2999 iterations 14
AccILPSolver: Cbc0038I Pass  96: suminf.    0.93845 (17) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  97: suminf.    0.93845 (17) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  98: suminf.    0.92277 (2) obj. -58 iterations 3
AccILPSolver: Cbc0038I Pass  99: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 100: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 101: suminf.   11.84153 (55) obj. -57.2999 iterations 73
AccILPSolver: Cbc0038I Pass 102: suminf.   11.86276 (63) obj. -57.2999 iterations 26
AccILPSolver: Cbc0038I Pass 103: suminf.    0.10003 (16) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass 104: suminf.    0.07503 (15) obj. -58 iterations 2
AccILPSolver: Cbc0038I Pass 105: suminf.    0.00000 (0) obj. -58 iterations 6
AccILPSolver: Cbc0038I Solution found of -58
AccILPSolver: Cbc0038I Cleaned solution of -58
AccILPSolver: Cbc0038I Rounding solution of -59 is better than previous of -58
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 251 integers at bound fixed and 0 continuous of which 23 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 814 rows 441 columns - 12 fixed gives 750, 406 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 726 rows 395 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.38 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -61.4999
AccILPSolver: Cbc0038I Pass 106: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass 107: suminf.    0.48514 (61) obj. -61.952 iterations 20
AccILPSolver: Cbc0038I Pass 108: suminf.    4.66742 (63) obj. -61.4999 iterations 18
AccILPSolver: Cbc0038I Pass 109: suminf.    0.93160 (63) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 110: suminf.    4.70799 (60) obj. -61.4999 iterations 30
AccILPSolver: Cbc0038I Pass 111: suminf.    0.97217 (60) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 112: suminf.    4.70799 (60) obj. -61.4999 iterations 21
AccILPSolver: Cbc0038I Pass 113: suminf.    4.33501 (50) obj. -61.4999 iterations 107
AccILPSolver: Cbc0038I Pass 114: suminf.    1.02062 (72) obj. -61.915 iterations 29
AccILPSolver: Cbc0038I Pass 115: suminf.    7.41824 (65) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 116: suminf.    1.27189 (68) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 117: suminf.    4.27800 (56) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 118: suminf.    0.74389 (61) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 119: suminf.    4.27800 (56) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 120: suminf.    3.30475 (83) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 121: suminf.    2.88533 (80) obj. -61.9257 iterations 25
AccILPSolver: Cbc0038I Pass 122: suminf.    6.52600 (68) obj. -61.4999 iterations 32
AccILPSolver: Cbc0038I Pass 123: suminf.    0.70253 (48) obj. -61.9642 iterations 30
AccILPSolver: Cbc0038I Pass 124: suminf.    5.59866 (44) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 125: suminf.    0.51239 (42) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 126: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 127: suminf.    0.51239 (42) obj. -61.9642 iterations 14
AccILPSolver: Cbc0038I Pass 128: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 129: suminf.    0.90202 (26) obj. -62.9642 iterations 18
AccILPSolver: Cbc0038I Pass 130: suminf.    0.04695 (14) obj. -62 iterations 5
AccILPSolver: Cbc0038I Pass 131: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 132: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 133: suminf.   38.37866 (117) obj. -61.4999 iterations 79
AccILPSolver: Cbc0038I Pass 134: suminf.    0.76837 (48) obj. -61.9655 iterations 32
AccILPSolver: Cbc0038I Pass 135: suminf.    2.14827 (55) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 136: suminf.    0.54669 (47) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 137: suminf.    6.11638 (47) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 138: suminf.    0.52092 (40) obj. -61.9642 iterations 16
AccILPSolver: Cbc0038I Pass 139: suminf.    6.09061 (40) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 140: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 141: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 142: suminf.    0.52092 (40) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 143: suminf.    6.09061 (40) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 144: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 145: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 146: suminf.    0.47542 (25) obj. -61.9642 iterations 21
AccILPSolver: Cbc0038I Pass 147: suminf.    6.04511 (25) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 148: suminf.    0.47542 (25) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 149: suminf.    1.29359 (46) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 150: suminf.    0.82116 (44) obj. -61.9643 iterations 21
AccILPSolver: Cbc0038I Pass 151: suminf.   85.43206 (206) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 152: suminf.    0.11042 (34) obj. -61.9958 iterations 9
AccILPSolver: Cbc0038I Pass 153: suminf.    1.05081 (17) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 154: suminf.    0.05926 (17) obj. -61.9958 iterations 8
AccILPSolver: Cbc0038I Pass 155: suminf.    1.05081 (17) obj. -61.4999 iterations 9
AccILPSolver: Cbc0038I Pass 156: suminf.    2.17794 (47) obj. -61.4999 iterations 86
AccILPSolver: Cbc0038I Pass 157: suminf.    0.93100 (43) obj. -61.9202 iterations 29
AccILPSolver: Cbc0038I Pass 158: suminf.    1.07933 (28) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 159: suminf.    0.22001 (28) obj. -61.9296 iterations 18
AccILPSolver: Cbc0038I Pass 160: suminf.    1.05511 (25) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 161: suminf.    0.19579 (25) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 162: suminf.    1.05208 (22) obj. -61.4999 iterations 19
AccILPSolver: Cbc0038I Pass 163: suminf.    0.19276 (22) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 164: suminf.   95.93635 (260) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 165: suminf.   24.32538 (260) obj. -61.9444 iterations 15
AccILPSolver: Cbc0038I Pass 166: suminf.    1.09254 (45) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 167: suminf.    0.62701 (45) obj. -61.9655 iterations 9
AccILPSolver: Cbc0038I Pass 168: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 169: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 170: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 171: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 172: suminf.  113.01572 (282) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 173: suminf.    0.88832 (52) obj. -61.9247 iterations 24
AccILPSolver: Cbc0038I Pass 174: suminf.    0.88832 (52) obj. -61.9247 iterations 0
AccILPSolver: Cbc0038I Pass 175: suminf.    5.38397 (57) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 176: suminf.    0.72096 (44) obj. -61.9456 iterations 10
AccILPSolver: Cbc0038I Pass 177: suminf.    0.72096 (44) obj. -61.9456 iterations 0
AccILPSolver: Cbc0038I Pass 178: suminf.    9.12061 (44) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 179: suminf.    1.98893 (60) obj. -61.4999 iterations 66
AccILPSolver: Cbc0038I Pass 180: suminf.    0.74544 (50) obj. -61.9456 iterations 29
AccILPSolver: Cbc0038I Pass 181: suminf.    1.73499 (50) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 182: suminf.    0.95453 (47) obj. -61.9603 iterations 11
AccILPSolver: Cbc0038I Pass 183: suminf.    9.25443 (49) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 184: suminf.    0.57506 (39) obj. -61.9696 iterations 14
AccILPSolver: Cbc0038I Pass 185: suminf.    0.57506 (39) obj. -61.9696 iterations 0
AccILPSolver: Cbc0038I Pass 186: suminf.    9.02603 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 187: suminf.    0.57506 (39) obj. -61.9696 iterations 9
AccILPSolver: Cbc0038I Pass 188: suminf.   83.78426 (237) obj. -61.4999 iterations 77
AccILPSolver: Cbc0038I Pass 189: suminf.    0.93026 (45) obj. -61.9151 iterations 34
AccILPSolver: Cbc0038I Pass 190: suminf.   75.16068 (188) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 191: suminf.    0.35829 (36) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 192: suminf.    1.23764 (34) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 193: suminf.    0.34007 (34) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 194: suminf.    1.16340 (16) obj. -61.4999 iterations 23
AccILPSolver: Cbc0038I Pass 195: suminf.    0.26385 (15) obj. -61.9487 iterations 15
AccILPSolver: Cbc0038I Pass 196: suminf.    1.15937 (14) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 197: suminf.    0.26180 (14) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 198: suminf.    1.26318 (30) obj. -61.4999 iterations 64
AccILPSolver: Cbc0038I Pass 199: suminf.    0.63017 (30) obj. -61.9141 iterations 17
AccILPSolver: Cbc0038I Pass 200: suminf.    1.18533 (20) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 201: suminf.    0.28776 (20) obj. -61.9487 iterations 13
AccILPSolver: Cbc0038I Pass 202: suminf.    1.18332 (19) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 203: suminf.    0.28575 (19) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 204: suminf.    1.91468 (66) obj. -61.4999 iterations 84
AccILPSolver: Cbc0038I Pass 205: suminf.    4.90122 (55) obj. -61.4999 iterations 101
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 140 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 1062 rows 563 columns - 13 fixed gives 1025, 539 - still too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.55 seconds)
AccILPSolver: Cbc0038I After 0.55 seconds - Feasibility pump exiting with objective of -59 - took 0.38 seconds
AccILPSolver: Cbc0012I Integer solution of -59 found by feasibility pump after 0 iterations and 0 nodes (0.55 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 580 rows 306 columns
AccILPSolver: Cbc0031I 81 added rows had average density of 9.7654321
AccILPSolver: Cbc0013I At root node, 81 cuts changed objective from -65 to -65 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 157 row cuts average 2.3 elements, 0 column cuts (40 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 456 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 14 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 463 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 7 (ZeroHalf) - 32 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -59 best solution, best possible -65 (0.75 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 699 rows 360 columns - 4 fixed gives 684, 352 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 645 rows 339 columns - too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 690 rows 356 columns - 4 fixed gives 675, 348 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 643 rows 336 columns - too large
AccILPSolver: Cbc0016I Integer solution of -64 found by strong branching after 1724 iterations and 93 nodes (1.24 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 226 rows 116 columns
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 237 rows 122 columns
AccILPSolver: Cbc0012I Integer solution of -65 found by rounding after 5322 iterations and 374 nodes (1.58 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -65, took 5322 iterations and 374 nodes (1.58 seconds)
AccILPSolver: Cbc0032I Strong branching done 1564 times (6193 iterations), fathomed 1 nodes and fixed 8 variables
AccILPSolver: Cbc0035I Maximum depth 44, 58 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -65 to -65
AccILPSolver: Probing was tried 10 times and created 157 cuts of which 40 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: Gomory was tried 10 times and created 456 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
AccILPSolver: Knapsack was tried 10 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: FlowCover was tried 10 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 463 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
AccILPSolver: ZeroHalf was tried 10 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -65.00000000
AccILPSolver: Enumerated nodes:               374
AccILPSolver: Total iterations:               5322
AccILPSolver: Time (CPU seconds):             1.62
AccILPSolver: Time (Wallclock seconds):       1.64
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       1.64   (Wallclock seconds):       1.67
AccILPSolver: 
benchmarking CPU/n=256, iter=64
time                 11.99 s    (11.94 s .. 12.09 s)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 12.14 s    (12.07 s .. 12.26 s)
std dev              106.7 ms   (2.497 ms .. 131.7 ms)
variance introduced by outliers: 19% (moderately inflated)

AccILPSolver: Welcome to the CBC MILP Solver 
AccILPSolver: Version: 2.10.7 
AccILPSolver: Build Date: Feb 14 2022 
AccILPSolver: 
AccILPSolver: command line - cbc /tmp/cbc1136744-25.lp solve solu /tmp/cbc1136744-26.sol (default strategy 1)
AccILPSolver: Continuous objective value is -65 - 0.01 seconds
AccILPSolver: Cgl0002I 103 variables fixed
AccILPSolver: Cgl0003I 38 fixed, 1315 tightened bounds, 305 strengthened rows, 24 substitutions
AccILPSolver: Cgl0003I 15 fixed, 901 tightened bounds, 69 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 2 fixed, 736 tightened bounds, 6 strengthened rows, 2 substitutions
AccILPSolver: Cgl0003I 0 fixed, 560 tightened bounds, 41 strengthened rows, 0 substitutions
AccILPSolver: Cgl0003I 0 fixed, 285 tightened bounds, 111 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 53 tightened bounds, 56 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 38 tightened bounds, 44 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 2 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0003I 0 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
AccILPSolver: Cgl0004I processed model has 1254 rows, 710 columns (710 integer (208 of which binary)) and 3158 elements
AccILPSolver: Cutoff increment increased from 1e-05 to 0.9999
AccILPSolver: Cbc0045I 60 integer variables out of 710 objects (710 integer) have cost of -1 - high priority
AccILPSolver: Cbc0045I branch on satisfied N create fake objective Y random cost Y
AccILPSolver: Cbc0038I Initial state - 90 integers unsatisfied sum - 5.09163
AccILPSolver: Cbc0038I Pass   1: suminf.    2.61995 (97) obj. -64.8606 iterations 109
AccILPSolver: Cbc0038I Pass   2: suminf.    0.46526 (60) obj. -60.9719 iterations 24
AccILPSolver: Cbc0038I Pass   3: suminf.    0.13090 (40) obj. -59.9865 iterations 5
AccILPSolver: Cbc0038I Pass   4: suminf.    0.00802 (8) obj. -58 iterations 24
AccILPSolver: Cbc0038I Pass   5: suminf.    0.07559 (23) obj. -58 iterations 6
AccILPSolver: Cbc0038I Pass   6: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass   7: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   8: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass   9: suminf.    0.12226 (15) obj. -45.9653 iterations 101
AccILPSolver: Cbc0038I Pass  10: suminf.    0.15754 (28) obj. -45.9674 iterations 19
AccILPSolver: Cbc0038I Pass  11: suminf.    0.09241 (26) obj. -45 iterations 7
AccILPSolver: Cbc0038I Pass  12: suminf.    0.03209 (10) obj. -45 iterations 5
AccILPSolver: Cbc0038I Pass  13: suminf.    0.00599 (3) obj. -45 iterations 3
AccILPSolver: Cbc0038I Pass  14: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  15: suminf.    0.00599 (3) obj. -45 iterations 0
AccILPSolver: Cbc0038I Pass  16: suminf.    0.67643 (47) obj. -40 iterations 122
AccILPSolver: Cbc0038I Pass  17: suminf.    0.66523 (46) obj. -40 iterations 13
AccILPSolver: Cbc0038I Pass  18: suminf.    0.00401 (4) obj. -40 iterations 12
AccILPSolver: Cbc0038I Pass  19: suminf.    0.00198 (2) obj. -40 iterations 6
AccILPSolver: Cbc0038I Pass  20: suminf.    0.00198 (2) obj. -40 iterations 0
AccILPSolver: Cbc0038I Pass  21: suminf.    0.06978 (13) obj. -36 iterations 49
AccILPSolver: Cbc0038I Pass  22: suminf.    0.06978 (13) obj. -36 iterations 5
AccILPSolver: Cbc0038I Pass  23: suminf.    0.00000 (0) obj. -36 iterations 10
AccILPSolver: Cbc0038I Solution found of -36
AccILPSolver: Cbc0038I Cleaned solution of -36
AccILPSolver: Cbc0038I Rounding solution of -43 is better than previous of -36
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous of which 15 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 923 rows 501 columns - 20 fixed gives 864, 464 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 836 rows 452 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -46.0999
AccILPSolver: Cbc0038I Pass  24: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  25: suminf.    0.76187 (72) obj. -62.9268 iterations 10
AccILPSolver: Cbc0038I Pass  26: suminf.    0.13090 (40) obj. -59.9865 iterations 16
AccILPSolver: Cbc0038I Pass  27: suminf.    0.00802 (8) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  28: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  29: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  30: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  31: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  32: suminf.   15.48197 (189) obj. -46.0999 iterations 143
AccILPSolver: Cbc0038I Pass  33: suminf.    0.54277 (41) obj. -46.0999 iterations 24
AccILPSolver: Cbc0038I Pass  34: suminf.    1.17053 (31) obj. -46.0999 iterations 21
AccILPSolver: Cbc0038I Pass  35: suminf.   21.21194 (231) obj. -46.0999 iterations 4
AccILPSolver: Cbc0038I Pass  36: suminf.    0.00599 (4) obj. -47 iterations 14
AccILPSolver: Cbc0038I Pass  37: suminf.    0.00406 (3) obj. -47 iterations 3
AccILPSolver: Cbc0038I Pass  38: suminf.    0.00199 (2) obj. -47 iterations 2
AccILPSolver: Cbc0038I Pass  39: suminf.    0.00199 (2) obj. -47 iterations 0
AccILPSolver: Cbc0038I Pass  40: suminf.    8.99389 (113) obj. -46.0999 iterations 121
AccILPSolver: Cbc0038I Pass  41: suminf.    8.99343 (113) obj. -46.0999 iterations 16
AccILPSolver: Cbc0038I Pass  42: suminf.    0.00000 (0) obj. -47 iterations 14
AccILPSolver: Cbc0038I Solution found of -47
AccILPSolver: Cbc0038I Cleaned solution of -47
AccILPSolver: Cbc0038I Before mini branch and bound, 196 integers at bound fixed and 0 continuous of which 12 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 928 rows 493 columns - 27 fixed gives 847, 447 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 819 rows 435 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -51.3999
AccILPSolver: Cbc0038I Pass  43: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  44: suminf.    1.00556 (80) obj. -62.9268 iterations 8
AccILPSolver: Cbc0038I Pass  45: suminf.    0.48514 (61) obj. -61.952 iterations 13
AccILPSolver: Cbc0038I Pass  46: suminf.    0.12153 (39) obj. -58.9958 iterations 12
AccILPSolver: Cbc0038I Pass  47: suminf.    0.00802 (8) obj. -58 iterations 21
AccILPSolver: Cbc0038I Pass  48: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  49: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  50: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  51: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  52: suminf.   56.16081 (163) obj. -51.3999 iterations 115
AccILPSolver: Cbc0038I Pass  53: suminf.    0.43686 (16) obj. -51.3999 iterations 20
AccILPSolver: Cbc0038I Pass  54: suminf.    0.03185 (11) obj. -52 iterations 12
AccILPSolver: Cbc0038I Pass  55: suminf.    0.03185 (11) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  56: suminf.    8.55887 (63) obj. -51.3999 iterations 99
AccILPSolver: Cbc0038I Pass  57: suminf.    4.83194 (51) obj. -51.3999 iterations 39
AccILPSolver: Cbc0038I Pass  58: suminf.    0.51691 (30) obj. -51.3999 iterations 14
AccILPSolver: Cbc0038I Pass  59: suminf.    0.13816 (34) obj. -51.9958 iterations 6
AccILPSolver: Cbc0038I Pass  60: suminf.   17.49201 (70) obj. -51.3999 iterations 10
AccILPSolver: Cbc0038I Pass  61: suminf.    0.00200 (2) obj. -52 iterations 21
AccILPSolver: Cbc0038I Pass  62: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  63: suminf.    0.00200 (2) obj. -52 iterations 0
AccILPSolver: Cbc0038I Pass  64: suminf.   22.93048 (63) obj. -51.3999 iterations 106
AccILPSolver: Cbc0038I Pass  65: suminf.   22.93048 (63) obj. -51.3999 iterations 30
AccILPSolver: Cbc0038I Pass  66: suminf.    1.16056 (4) obj. -51.3999 iterations 40
AccILPSolver: Cbc0038I Pass  67: suminf.    1.16056 (4) obj. -51.3999 iterations 0
AccILPSolver: Cbc0038I Pass  68: suminf.    0.00000 (0) obj. -52 iterations 10
AccILPSolver: Cbc0038I Solution found of -52
AccILPSolver: Cbc0038I Cleaned solution of -52
AccILPSolver: Cbc0038I Rounding solution of -53 is better than previous of -52
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 185 integers at bound fixed and 0 continuous of which 17 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 945 rows 504 columns - 17 fixed gives 886, 472 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 858 rows 458 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -57.2999
AccILPSolver: Cbc0038I Pass  69: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass  70: suminf.    0.30627 (52) obj. -60.9719 iterations 25
AccILPSolver: Cbc0038I Pass  71: suminf.    0.04237 (30) obj. -58 iterations 11
AccILPSolver: Cbc0038I Pass  72: suminf.    0.00802 (8) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass  73: suminf.    0.07584 (23) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  74: suminf.    0.00399 (4) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  75: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  76: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  77: suminf.   45.24373 (174) obj. -57.2999 iterations 131
AccILPSolver: Cbc0038I Pass  78: suminf.   35.49310 (153) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  79: suminf.   27.86567 (120) obj. -57.2999 iterations 30
AccILPSolver: Cbc0038I Pass  80: suminf.   27.86567 (120) obj. -57.2999 iterations 0
AccILPSolver: Cbc0038I Pass  81: suminf.    0.08709 (27) obj. -58 iterations 7
AccILPSolver: Cbc0038I Pass  82: suminf.    0.08709 (27) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  83: suminf.    0.04495 (15) obj. -58 iterations 8
AccILPSolver: Cbc0038I Pass  84: suminf.    0.04395 (14) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  85: suminf.    0.04395 (14) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  86: suminf.    0.88088 (31) obj. -57.2999 iterations 81
AccILPSolver: Cbc0038I Pass  87: suminf.    0.71094 (22) obj. -57.2999 iterations 18
AccILPSolver: Cbc0038I Pass  88: suminf.    0.31718 (16) obj. -57.9674 iterations 19
AccILPSolver: Cbc0038I Pass  89: suminf.    0.31718 (16) obj. -57.9674 iterations 2
AccILPSolver: Cbc0038I Pass  90: suminf.    3.00329 (14) obj. -57.2999 iterations 24
AccILPSolver: Cbc0038I Pass  91: suminf.    0.00399 (4) obj. -58 iterations 9
AccILPSolver: Cbc0038I Pass  92: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  93: suminf.    0.00399 (4) obj. -58 iterations 0
AccILPSolver: Cbc0038I Pass  94: suminf.   11.76728 (75) obj. -57.2999 iterations 92
AccILPSolver: Cbc0038I Pass  95: suminf.   12.03051 (75) obj. -57.2999 iterations 14
AccILPSolver: Cbc0038I Pass  96: suminf.    0.93845 (17) obj. -58 iterations 25
AccILPSolver: Cbc0038I Pass  97: suminf.    0.93845 (17) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass  98: suminf.    0.92277 (2) obj. -58 iterations 3
AccILPSolver: Cbc0038I Pass  99: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 100: suminf.    0.92277 (2) obj. -58 iterations 1
AccILPSolver: Cbc0038I Pass 101: suminf.   11.84153 (55) obj. -57.2999 iterations 73
AccILPSolver: Cbc0038I Pass 102: suminf.   11.86276 (63) obj. -57.2999 iterations 26
AccILPSolver: Cbc0038I Pass 103: suminf.    0.10003 (16) obj. -58 iterations 17
AccILPSolver: Cbc0038I Pass 104: suminf.    0.07503 (15) obj. -58 iterations 2
AccILPSolver: Cbc0038I Pass 105: suminf.    0.00000 (0) obj. -58 iterations 6
AccILPSolver: Cbc0038I Solution found of -58
AccILPSolver: Cbc0038I Cleaned solution of -58
AccILPSolver: Cbc0038I Rounding solution of -59 is better than previous of -58
AccILPSolver: 
AccILPSolver: Cbc0038I Before mini branch and bound, 251 integers at bound fixed and 0 continuous of which 23 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 814 rows 441 columns - 12 fixed gives 750, 406 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 726 rows 395 columns - too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.38 seconds)
AccILPSolver: Cbc0038I Round again with cutoff of -61.4999
AccILPSolver: Cbc0038I Pass 106: suminf.    2.61995 (97) obj. -64.8606 iterations 0
AccILPSolver: Cbc0038I Pass 107: suminf.    0.48514 (61) obj. -61.952 iterations 20
AccILPSolver: Cbc0038I Pass 108: suminf.    4.66742 (63) obj. -61.4999 iterations 18
AccILPSolver: Cbc0038I Pass 109: suminf.    0.93160 (63) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 110: suminf.    4.70799 (60) obj. -61.4999 iterations 30
AccILPSolver: Cbc0038I Pass 111: suminf.    0.97217 (60) obj. -61.915 iterations 19
AccILPSolver: Cbc0038I Pass 112: suminf.    4.70799 (60) obj. -61.4999 iterations 21
AccILPSolver: Cbc0038I Pass 113: suminf.    4.33501 (50) obj. -61.4999 iterations 107
AccILPSolver: Cbc0038I Pass 114: suminf.    1.02062 (72) obj. -61.915 iterations 29
AccILPSolver: Cbc0038I Pass 115: suminf.    7.41824 (65) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 116: suminf.    1.27189 (68) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 117: suminf.    4.27800 (56) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 118: suminf.    0.74389 (61) obj. -61.9402 iterations 14
AccILPSolver: Cbc0038I Pass 119: suminf.    4.27800 (56) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 120: suminf.    3.30475 (83) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 121: suminf.    2.88533 (80) obj. -61.9257 iterations 25
AccILPSolver: Cbc0038I Pass 122: suminf.    6.52600 (68) obj. -61.4999 iterations 32
AccILPSolver: Cbc0038I Pass 123: suminf.    0.70253 (48) obj. -61.9642 iterations 30
AccILPSolver: Cbc0038I Pass 124: suminf.    5.59866 (44) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 125: suminf.    0.51239 (42) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 126: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 127: suminf.    0.51239 (42) obj. -61.9642 iterations 14
AccILPSolver: Cbc0038I Pass 128: suminf.    5.59866 (44) obj. -61.4999 iterations 13
AccILPSolver: Cbc0038I Pass 129: suminf.    0.90202 (26) obj. -62.9642 iterations 18
AccILPSolver: Cbc0038I Pass 130: suminf.    0.04695 (14) obj. -62 iterations 5
AccILPSolver: Cbc0038I Pass 131: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 132: suminf.    0.04695 (14) obj. -62 iterations 0
AccILPSolver: Cbc0038I Pass 133: suminf.   38.37866 (117) obj. -61.4999 iterations 79
AccILPSolver: Cbc0038I Pass 134: suminf.    0.76837 (48) obj. -61.9655 iterations 32
AccILPSolver: Cbc0038I Pass 135: suminf.    2.14827 (55) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 136: suminf.    0.54669 (47) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 137: suminf.    6.11638 (47) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 138: suminf.    0.52092 (40) obj. -61.9642 iterations 16
AccILPSolver: Cbc0038I Pass 139: suminf.    6.09061 (40) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 140: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 141: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 142: suminf.    0.52092 (40) obj. -61.9642 iterations 9
AccILPSolver: Cbc0038I Pass 143: suminf.    6.09061 (40) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 144: suminf.    0.52092 (40) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 145: suminf.    6.09061 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 146: suminf.    0.47542 (25) obj. -61.9642 iterations 21
AccILPSolver: Cbc0038I Pass 147: suminf.    6.04511 (25) obj. -61.4999 iterations 11
AccILPSolver: Cbc0038I Pass 148: suminf.    0.47542 (25) obj. -61.9642 iterations 10
AccILPSolver: Cbc0038I Pass 149: suminf.    1.29359 (46) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 150: suminf.    0.82116 (44) obj. -61.9643 iterations 21
AccILPSolver: Cbc0038I Pass 151: suminf.   85.43206 (206) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 152: suminf.    0.11042 (34) obj. -61.9958 iterations 9
AccILPSolver: Cbc0038I Pass 153: suminf.    1.05081 (17) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 154: suminf.    0.05926 (17) obj. -61.9958 iterations 8
AccILPSolver: Cbc0038I Pass 155: suminf.    1.05081 (17) obj. -61.4999 iterations 9
AccILPSolver: Cbc0038I Pass 156: suminf.    2.17794 (47) obj. -61.4999 iterations 86
AccILPSolver: Cbc0038I Pass 157: suminf.    0.93100 (43) obj. -61.9202 iterations 29
AccILPSolver: Cbc0038I Pass 158: suminf.    1.07933 (28) obj. -61.4999 iterations 26
AccILPSolver: Cbc0038I Pass 159: suminf.    0.22001 (28) obj. -61.9296 iterations 18
AccILPSolver: Cbc0038I Pass 160: suminf.    1.05511 (25) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 161: suminf.    0.19579 (25) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 162: suminf.    1.05208 (22) obj. -61.4999 iterations 19
AccILPSolver: Cbc0038I Pass 163: suminf.    0.19276 (22) obj. -61.9296 iterations 16
AccILPSolver: Cbc0038I Pass 164: suminf.   95.93635 (260) obj. -61.4999 iterations 83
AccILPSolver: Cbc0038I Pass 165: suminf.   24.32538 (260) obj. -61.9444 iterations 15
AccILPSolver: Cbc0038I Pass 166: suminf.    1.09254 (45) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 167: suminf.    0.62701 (45) obj. -61.9655 iterations 9
AccILPSolver: Cbc0038I Pass 168: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 169: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 170: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 171: suminf.    0.62701 (45) obj. -61.9655 iterations 0
AccILPSolver: Cbc0038I Pass 172: suminf.  113.01572 (282) obj. -61.4999 iterations 95
AccILPSolver: Cbc0038I Pass 173: suminf.    0.88832 (52) obj. -61.9247 iterations 24
AccILPSolver: Cbc0038I Pass 174: suminf.    0.88832 (52) obj. -61.9247 iterations 0
AccILPSolver: Cbc0038I Pass 175: suminf.    5.38397 (57) obj. -61.4999 iterations 20
AccILPSolver: Cbc0038I Pass 176: suminf.    0.72096 (44) obj. -61.9456 iterations 10
AccILPSolver: Cbc0038I Pass 177: suminf.    0.72096 (44) obj. -61.9456 iterations 0
AccILPSolver: Cbc0038I Pass 178: suminf.    9.12061 (44) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 179: suminf.    1.98893 (60) obj. -61.4999 iterations 66
AccILPSolver: Cbc0038I Pass 180: suminf.    0.74544 (50) obj. -61.9456 iterations 29
AccILPSolver: Cbc0038I Pass 181: suminf.    1.73499 (50) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 182: suminf.    0.95453 (47) obj. -61.9603 iterations 11
AccILPSolver: Cbc0038I Pass 183: suminf.    9.25443 (49) obj. -61.4999 iterations 15
AccILPSolver: Cbc0038I Pass 184: suminf.    0.57506 (39) obj. -61.9696 iterations 14
AccILPSolver: Cbc0038I Pass 185: suminf.    0.57506 (39) obj. -61.9696 iterations 0
AccILPSolver: Cbc0038I Pass 186: suminf.    9.02603 (40) obj. -61.4999 iterations 10
AccILPSolver: Cbc0038I Pass 187: suminf.    0.57506 (39) obj. -61.9696 iterations 9
AccILPSolver: Cbc0038I Pass 188: suminf.   83.78426 (237) obj. -61.4999 iterations 77
AccILPSolver: Cbc0038I Pass 189: suminf.    0.93026 (45) obj. -61.9151 iterations 34
AccILPSolver: Cbc0038I Pass 190: suminf.   75.16068 (188) obj. -61.4999 iterations 16
AccILPSolver: Cbc0038I Pass 191: suminf.    0.35829 (36) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 192: suminf.    1.23764 (34) obj. -61.4999 iterations 12
AccILPSolver: Cbc0038I Pass 193: suminf.    0.34007 (34) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 194: suminf.    1.16340 (16) obj. -61.4999 iterations 23
AccILPSolver: Cbc0038I Pass 195: suminf.    0.26385 (15) obj. -61.9487 iterations 15
AccILPSolver: Cbc0038I Pass 196: suminf.    1.15937 (14) obj. -61.4999 iterations 14
AccILPSolver: Cbc0038I Pass 197: suminf.    0.26180 (14) obj. -61.9487 iterations 11
AccILPSolver: Cbc0038I Pass 198: suminf.    1.26318 (30) obj. -61.4999 iterations 64
AccILPSolver: Cbc0038I Pass 199: suminf.    0.63017 (30) obj. -61.9141 iterations 17
AccILPSolver: Cbc0038I Pass 200: suminf.    1.18533 (20) obj. -61.4999 iterations 24
AccILPSolver: Cbc0038I Pass 201: suminf.    0.28776 (20) obj. -61.9487 iterations 13
AccILPSolver: Cbc0038I Pass 202: suminf.    1.18332 (19) obj. -61.4999 iterations 17
AccILPSolver: Cbc0038I Pass 203: suminf.    0.28575 (19) obj. -61.9487 iterations 12
AccILPSolver: Cbc0038I Pass 204: suminf.    1.91468 (66) obj. -61.4999 iterations 84
AccILPSolver: Cbc0038I Pass 205: suminf.    4.90122 (55) obj. -61.4999 iterations 101
AccILPSolver: Cbc0038I No solution found this major pass
AccILPSolver: Cbc0038I Before mini branch and bound, 140 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 1062 rows 563 columns - 13 fixed gives 1025, 539 - still too large
AccILPSolver: Cbc0038I Mini branch and bound did not improve solution (0.57 seconds)
AccILPSolver: Cbc0038I After 0.57 seconds - Feasibility pump exiting with objective of -59 - took 0.41 seconds
AccILPSolver: Cbc0012I Integer solution of -59 found by feasibility pump after 0 iterations and 0 nodes (0.57 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 580 rows 306 columns
AccILPSolver: Cbc0031I 81 added rows had average density of 9.7654321
AccILPSolver: Cbc0013I At root node, 81 cuts changed objective from -65 to -65 in 10 passes
AccILPSolver: Cbc0014I Cut generator 0 (Probing) - 157 row cuts average 2.3 elements, 0 column cuts (40 active)  in 0.010 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 1 (Gomory) - 456 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 5 (FlowCover) - 14 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 6 (TwoMirCuts) - 463 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
AccILPSolver: Cbc0014I Cut generator 7 (ZeroHalf) - 32 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
AccILPSolver: Cbc0010I After 0 nodes, 1 on tree, -59 best solution, best possible -65 (0.78 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 699 rows 360 columns - 4 fixed gives 684, 352 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 645 rows 339 columns - too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 690 rows 356 columns - 4 fixed gives 675, 348 - still too large
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 643 rows 336 columns - too large
AccILPSolver: Cbc0016I Integer solution of -64 found by strong branching after 1724 iterations and 93 nodes (1.28 seconds)
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 226 rows 116 columns
AccILPSolver: Cbc0038I Full problem 1254 rows 710 columns, reduced to 237 rows 122 columns
AccILPSolver: Cbc0012I Integer solution of -65 found by rounding after 5322 iterations and 374 nodes (1.60 seconds)
AccILPSolver: Cbc0001I Search completed - best objective -65, took 5322 iterations and 374 nodes (1.60 seconds)
AccILPSolver: Cbc0032I Strong branching done 1564 times (6193 iterations), fathomed 1 nodes and fixed 8 variables
AccILPSolver: Cbc0035I Maximum depth 44, 58 variables fixed on reduced cost
AccILPSolver: Cuts at root node changed objective from -65 to -65
AccILPSolver: Probing was tried 10 times and created 157 cuts of which 40 were active after adding rounds of cuts (0.010 seconds)
AccILPSolver: Gomory was tried 10 times and created 456 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
AccILPSolver: Knapsack was tried 10 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
AccILPSolver: MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
AccILPSolver: FlowCover was tried 10 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
AccILPSolver: TwoMirCuts was tried 10 times and created 463 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
AccILPSolver: ZeroHalf was tried 10 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
AccILPSolver: 
AccILPSolver: Result - Optimal solution found
AccILPSolver: 
AccILPSolver: Objective value:                -65.00000000
AccILPSolver: Enumerated nodes:               374
AccILPSolver: Total iterations:               5322
AccILPSolver: Time (CPU seconds):             1.63
AccILPSolver: Time (Wallclock seconds):       1.65
AccILPSolver: 
AccILPSolver: Total time (CPU seconds):       1.67   (Wallclock seconds):       1.69
AccILPSolver: 
benchmarking CPU/n=256, iter=128
time                 23.03 s    (22.97 s .. 23.13 s)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 23.03 s    (23.01 s .. 23.04 s)
std dev              19.15 ms   (10.36 ms .. 23.05 ms)
variance introduced by outliers: 19% (moderately inflated)

